==============================================================================
=== date and time   28 September 2016/16:46
=== make parameters --no-builtin-rules -f c:\tools\boost\1.61.0_draeger02\make\make_Win32.mk SHELL=C:\tools\msys2\1.0c\usr\bin\sh.exe PLATFORM=Win32 BUILD_PLATFORM=Win32-SimRTP -j7 all
=== Makefile        c:\tools\boost\1.61.0_draeger02\make\make_Win32.mk
=== Target          BUILD_PLATFORM=Win32-SimRTP -j7 all
=== Host            DMAID2042.corp.draeger.global
=== Domain\User     CORP\darmto
=== ViewRoot        d:\develop\git_projects\s32
=== REL_VIEW_ROOT   d:/develop/git_projects/s32
=== Platform        Win32
=== MAKE_PARALLEL_BUILD_OPTION -j
=== MAKE_VIEW_ROOT   d:/develop/git_projects/s32
=== MAKE_VIEW_ROOT_B d:\develop\git_projects\s32
=== MAKE_SYSTEM      gmake
=== MAKE_PARAM       -J 8 BUILD_VERSION_TOOL=GIT
==============================================================================
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/atomic/src/lockpool.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/chrono/src/thread_clock.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/chrono/src/process_cpu_clocks.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/chrono/src/chrono.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/date_time/src/gregorian/date_generators.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/date_time/src/gregorian/gregorian_types.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/date_time/src/gregorian/greg_month.obj
gregorian_types.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/date_time/src/gregorian/greg_weekday.obj
lockpool.cpp
C:\tools\boost\1.61.0_draeger02\libs\atomic\src\lockpool.cpp(69): warning C4324: 'boost::atomics::detail::`anonymous-namespace'::padded_lock<0>': structure was padded due to alignment specifier
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/date_time/src/posix_time/posix_time_types.obj
posix_time_types.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/exception/src/clone_current_exception_non_intrusive.obj
date_generators.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/filesystem/src/codecvt_error_category.obj
greg_weekday.cpp
clone_current_exception_non_intrusive.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/filesystem/src/operations.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/filesystem/src/path.obj
codecvt_error_category.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/filesystem/src/path_traits.obj
greg_month.cpp
thread_clock.cpp
This header is deprecated, use boost/detail/winapi/get_last_error.hpp instead.
This header is deprecated, use boost/detail/winapi/get_current_thread.hpp instead.
This header is deprecated, use boost/detail/winapi/get_thread_times.hpp instead.
process_cpu_clocks.cpp
This header is deprecated, use boost/detail/winapi/get_last_error.hpp instead.
This header is deprecated, use boost/detail/winapi/get_current_process.hpp instead.
This header is deprecated, use boost/detail/winapi/get_process_times.hpp instead.
chrono.cpp
This header is deprecated, use boost/detail/winapi/get_last_error.hpp instead.
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/filesystem/src/portability.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/filesystem/src/unique_path.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/filesystem/src/utf8_codecvt_facet.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/filesystem/src/windows_file_codecvt.obj
path_traits.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/graph/src/graphml.obj
path.cpp
operations.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/graph/src/read_graphviz_new.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/acosh.obj
utf8_codecvt_facet.cpp
portability.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/acoshf.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/acoshl.obj
windows_file_codecvt.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/asinh.obj
unique_path.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/asinhf.obj
acosh.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/asinhl.obj
acoshl.cpp
acoshf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/assoc_laguerre.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/assoc_laguerref.obj
asinh.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/assoc_laguerrel.obj
asinhf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/assoc_legendre.obj
asinhl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/assoc_legendref.obj
assoc_laguerre.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/assoc_legendrel.obj
assoc_laguerref.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/atanh.obj
graphml.cpp
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(87): warning C4456: declaration of '_foreach_col' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(85): note: see declaration of '_foreach_col'
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(87): warning C4456: declaration of '_foreach_cur' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(85): note: see declaration of '_foreach_cur'
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(87): warning C4456: declaration of '_foreach_end' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(85): note: see declaration of '_foreach_end'
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(87): warning C4456: declaration of '_foreach_continue' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(85): note: see declaration of '_foreach_continue'
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(91): warning C4456: declaration of '_foreach_col' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(87): note: see declaration of '_foreach_col'
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(91): warning C4456: declaration of '_foreach_cur' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(87): note: see declaration of '_foreach_cur'
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(91): warning C4456: declaration of '_foreach_end' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(87): note: see declaration of '_foreach_end'
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(91): warning C4456: declaration of '_foreach_continue' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(87): note: see declaration of '_foreach_continue'
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(102): warning C4456: declaration of '_foreach_col' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(99): note: see declaration of '_foreach_col'
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(102): warning C4456: declaration of '_foreach_cur' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(99): note: see declaration of '_foreach_cur'
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(102): warning C4456: declaration of '_foreach_end' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(99): note: see declaration of '_foreach_end'
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(102): warning C4456: declaration of '_foreach_continue' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(99): note: see declaration of '_foreach_continue'
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(117): warning C4456: declaration of '_foreach_col' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(102): note: see declaration of '_foreach_col'
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(117): warning C4456: declaration of '_foreach_cur' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(102): note: see declaration of '_foreach_cur'
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(117): warning C4456: declaration of '_foreach_end' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(102): note: see declaration of '_foreach_end'
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(117): warning C4456: declaration of '_foreach_continue' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\graph\src\graphml.cpp(102): note: see declaration of '_foreach_continue'
assoc_laguerrel.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/atanhf.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/atanhl.obj
read_graphviz_new.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/beta.obj
assoc_legendre.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/betaf.obj
atanh.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/betal.obj
assoc_legendref.cpp
assoc_legendrel.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/cbrtf.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/cbrt.obj
atanhf.cpp
atanhl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/cbrtl.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/comp_ellint_1.obj
beta.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/comp_ellint_1f.obj
betaf.cpp
cbrtf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/comp_ellint_1l.obj
cbrt.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/comp_ellint_2.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/comp_ellint_2f.obj
cbrtl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/comp_ellint_2l.obj
betal.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/comp_ellint_3.obj
comp_ellint_1.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/comp_ellint_3f.obj
comp_ellint_1f.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/comp_ellint_3l.obj
comp_ellint_1l.cpp
comp_ellint_2.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/copysign.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/copysignf.obj
comp_ellint_2f.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/copysignl.obj
comp_ellint_3f.cpp
comp_ellint_2l.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/cyl_bessel_i.obj
comp_ellint_3.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/cyl_bessel_if.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/cyl_bessel_il.obj
copysign.cpp
comp_ellint_3l.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/cyl_bessel_j.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/cyl_bessel_jf.obj
copysignf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/cyl_bessel_jl.obj
copysignl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/cyl_bessel_k.obj
cyl_bessel_i.cpp
cyl_bessel_if.cpp
cyl_bessel_il.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/cyl_bessel_kf.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/cyl_bessel_kl.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/cyl_neumann.obj
cyl_bessel_jf.cpp
cyl_bessel_j.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/cyl_neumannf.obj
cyl_bessel_jl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/cyl_neumannl.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/ellint_1.obj
cyl_bessel_k.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/ellint_1f.obj
cyl_bessel_kl.cpp
cyl_bessel_kf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/ellint_1l.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/ellint_2.obj
cyl_neumann.cpp
ellint_1.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/ellint_2f.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/ellint_2l.obj
cyl_neumannf.cpp
ellint_1f.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/ellint_3.obj
cyl_neumannl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/ellint_3f.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/ellint_3l.obj
ellint_1l.cpp
ellint_2.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/erf.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/erfc.obj
ellint_2f.cpp
ellint_2l.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/erfcf.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/erfcl.obj
ellint_3.cpp
ellint_3f.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/erff.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/erfl.obj
ellint_3l.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/expint.obj
erf.cpp
erfc.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/expintf.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/expintl.obj
erfcl.cpp
erfcf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/expm1.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/expm1f.obj
erff.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/expm1l.obj
erfl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/fmax.obj
expint.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/fmaxf.obj
fmax.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/fmaxl.obj
fmaxf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/fmin.obj
expm1f.cpp
expm1.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/fminf.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/fminl.obj
expintf.cpp
expintl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/fpclassify.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/fpclassifyf.obj
expm1l.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/fpclassifyl.obj
fmaxl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/hermite.obj
fmin.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/hermitef.obj
fminl.cpp
fminf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/hermitel.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/hypot.obj
fpclassify.cpp
fpclassifyf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/hypotf.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/hypotl.obj
fpclassifyl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/laguerre.obj
hermite.cpp
hermitef.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/laguerref.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/laguerrel.obj
hermitel.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/legendre.obj
hypot.cpp
hypotf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/legendref.obj
hypotl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/legendrel.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/lgamma.obj
laguerre.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/lgammaf.obj
laguerref.cpp
laguerrel.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/lgammal.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/llround.obj
legendref.cpp
legendre.cpp
legendrel.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/llroundf.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/llroundl.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/log1p.obj
lgamma.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/log1pf.obj
lgammaf.cpp
llround.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/log1pl.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/lround.obj
lgammal.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/lroundf.obj
llroundf.cpp
llroundl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/lroundl.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/nextafter.obj
log1p.cpp
lround.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/nextafterf.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/nextafterl.obj
log1pf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/nexttoward.obj
log1pl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/nexttowardf.obj
lroundf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/nexttowardl.obj
nextafter.cpp
lroundl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/riemann_zeta.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/riemann_zetaf.obj
nextafterl.cpp
nextafterf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/riemann_zetal.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/round.obj
nexttowardf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/roundf.obj
nexttoward.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/roundl.obj
nexttowardl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/sph_bessel.obj
round.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/sph_besself.obj
roundl.cpp
roundf.cpp
riemann_zeta.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/sph_bessell.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/sph_legendre.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/sph_legendref.obj
riemann_zetaf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/sph_legendrel.obj
riemann_zetal.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/sph_neumann.obj
sph_bessel.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/sph_neumannf.obj
sph_besself.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/sph_neumannl.obj
sph_legendre.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/tgamma.obj
sph_legendref.cpp
sph_legendrel.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/tgammaf.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/tgammal.obj
sph_bessell.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/trunc.obj
sph_neumann.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/truncf.obj
sph_neumannf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/math/src/tr1/truncl.obj
trunc.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/program_options/src/cmdline.obj
truncf.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/program_options/src/config_file.obj
sph_neumannl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/program_options/src/convert.obj
tgammaf.cpp
tgammal.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/program_options/src/options_description.obj
tgamma.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/program_options/src/parsers.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/program_options/src/positional_options.obj
positional_options.cpp
truncl.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/program_options/src/split.obj
convert.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/program_options/src/utf8_codecvt_facet.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/program_options/src/value_semantic.obj
config_file.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/program_options/src/variables_map.obj
utf8_codecvt_facet.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/program_options/src/winmain.obj
cmdline.cpp
C:\tools\boost\1.61.0_draeger02\libs\program_options\src\cmdline.cpp(104): warning C4458: declaration of 'args' hides class member
C:\tools\boost\1.61.0_draeger02\boost/program_options/detail/cmdline.hpp(139): note: see declaration of 'boost::program_options::detail::cmdline::args'
C:\tools\boost\1.61.0_draeger02\libs\program_options\src\cmdline.cpp(515): warning C4458: declaration of 'args' hides class member
C:\tools\boost\1.61.0_draeger02\boost/program_options/detail/cmdline.hpp(139): note: see declaration of 'boost::program_options::detail::cmdline::args'
C:\tools\boost\1.61.0_draeger02\libs\program_options\src\cmdline.cpp(552): warning C4458: declaration of 'args' hides class member
C:\tools\boost\1.61.0_draeger02\boost/program_options/detail/cmdline.hpp(139): note: see declaration of 'boost::program_options::detail::cmdline::args'
C:\tools\boost\1.61.0_draeger02\libs\program_options\src\cmdline.cpp(618): warning C4458: declaration of 'args' hides class member
C:\tools\boost\1.61.0_draeger02\boost/program_options/detail/cmdline.hpp(139): note: see declaration of 'boost::program_options::detail::cmdline::args'
C:\tools\boost\1.61.0_draeger02\libs\program_options\src\cmdline.cpp(639): warning C4458: declaration of 'args' hides class member
C:\tools\boost\1.61.0_draeger02\boost/program_options/detail/cmdline.hpp(139): note: see declaration of 'boost::program_options::detail::cmdline::args'
C:\tools\boost\1.61.0_draeger02\libs\program_options\src\cmdline.cpp(670): warning C4458: declaration of 'args' hides class member
C:\tools\boost\1.61.0_draeger02\boost/program_options/detail/cmdline.hpp(139): note: see declaration of 'boost::program_options::detail::cmdline::args'
C:\tools\boost\1.61.0_draeger02\libs\program_options\src\cmdline.cpp(690): warning C4458: declaration of 'args' hides class member
C:\tools\boost\1.61.0_draeger02\boost/program_options/detail/cmdline.hpp(139): note: see declaration of 'boost::program_options::detail::cmdline::args'
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/random/src/random_device.obj
options_description.cpp
parsers.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/c_regex_traits.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/cpp_regex_traits.obj
split.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/cregex.obj
random_device.cpp
C:\tools\boost\1.61.0_draeger02\libs\random\src\random_device.cpp(50): warning C4005: 'BOOST_AUTO_LINK_NOMANGLE': macro redefinition
C:\tools\boost\1.61.0_draeger02\libs\random\src\random_device.cpp(50): note: command-line arguments:  see previous definition of 'BOOST_AUTO_LINK_NOMANGLE'
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/fileiter.obj
value_semantic.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/icu.obj
c_regex_traits.cpp
variables_map.cpp
C:\tools\boost\1.61.0_draeger02\libs\program_options\src\variables_map.cpp(71): warning C4456: declaration of 'original_token' hides previous local declaration
C:\tools\boost\1.61.0_draeger02\libs\program_options\src\variables_map.cpp(43): note: see declaration of 'original_token'
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/instances.obj
cpp_regex_traits.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/posix_api.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/regex.obj
icu.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/regex_debug.obj
winmain.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/regex_raw_buffer.obj
regex_debug.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/regex_traits_defaults.obj
regex_raw_buffer.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/static_mutex.obj
fileiter.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/usinstances.obj
static_mutex.cpp
regex.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/w32_regex_traits.obj
posix_api.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/wc_regex_traits.obj
cregex.cpp
regex_traits_defaults.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/wide_posix_api.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/regex/src/winstances.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/archive_exception.obj
instances.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/basic_archive.obj
archive_exception.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/basic_iarchive.obj
basic_archive.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/basic_iserializer.obj
wc_regex_traits.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/basic_oarchive.obj
w32_regex_traits.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/basic_oserializer.obj
basic_iserializer.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/basic_pointer_iserializer.obj
wide_posix_api.cpp
basic_pointer_iserializer.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/basic_pointer_oserializer.obj
usinstances.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/basic_serializer_map.obj
basic_oserializer.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/basic_text_iprimitive.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/basic_text_oprimitive.obj
basic_iarchive.cpp
basic_pointer_oserializer.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/basic_xml_archive.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/binary_iarchive.obj
winstances.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/binary_oarchive.obj
basic_oarchive.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/codecvt_null.obj
basic_serializer_map.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/extended_type_info.obj
basic_xml_archive.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/extended_type_info_no_rtti.obj
basic_text_iprimitive.cpp
C:\tools\boost\1.61.0_draeger02\boost/archive/iterators/istream_iterator.hpp(59): warning C4244: 'return': conversion from 'int' to 'CharType', possible loss of data
C:\tools\boost\1.61.0_draeger02\boost/archive/iterators/istream_iterator.hpp(58): note: while compiling class template member function 'CharType boost::archive::iterators::istream_iterator<CharType>::dereference(void) const'
C:\tools\boost\1.61.0_draeger02\boost/iterator/iterator_facade.hpp(549): note: see reference to function template instantiation 'CharType boost::archive::iterators::istream_iterator<CharType>::dereference(void) const' being compiled
C:\tools\MS_VC_Toolkit\VC_2015us\include\xutility(594): note: see reference to class template instantiation 'boost::archive::iterators::istream_iterator<CharType>' being compiled
C:\tools\boost\1.61.0_draeger02\boost/iterator/iterator_traits.hpp(22): note: see reference to class template instantiation 'std::iterator_traits<Iterator>' being compiled
        with
        [
            Iterator=boost::archive::iterators::istream_iterator<CharType>
        ]
C:\tools\boost\1.61.0_draeger02\boost/archive/iterators/remove_whitespace.hpp(136): note: see reference to class template instantiation 'boost::iterators::iterator_value<Base>' being compiled
        with
        [
            Base=boost::archive::iterators::istream_iterator<CharType>
        ]
C:\tools\MS_VC_Toolkit\VC_2015us\include\xutility(594): note: see reference to class template instantiation 'boost::archive::iterators::remove_whitespace<boost::archive::iterators::istream_iterator<CharType>>' being compiled
C:\tools\boost\1.61.0_draeger02\boost/iterator/transform_iterator.hpp(50): note: see reference to class template instantiation 'std::iterator_traits<Iterator>' being compiled
        with
        [
            Iterator=boost::archive::iterators::remove_whitespace<boost::archive::iterators::istream_iterator<CharType>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/iterator/transform_iterator.hpp(76): note: see reference to class template instantiation 'boost::iterators::detail::transform_iterator_base<UnaryFunc,Iterator,Reference,Value>' being compiled
        with
        [
            UnaryFunc=boost::archive::iterators::detail::to_6_bit<int>,
            Iterator=boost::archive::iterators::remove_whitespace<boost::archive::iterators::istream_iterator<CharType>>,
            Reference=boost::iterators::use_default,
            Value=boost::iterators::use_default
        ]
C:\tools\boost\1.61.0_draeger02\boost/archive/iterators/binary_from_base64.hpp(89): note: see reference to class template instantiation 'boost::iterators::transform_iterator<boost::archive::iterators::detail::to_6_bit<CharType>,Base,boost::iterators::use_default,boost::iterators::use_default>' being compiled
        with
        [
            CharType=int,
            Base=boost::archive::iterators::remove_whitespace<boost::archive::iterators::istream_iterator<CharType>>
        ]
C:\tools\MS_VC_Toolkit\VC_2015us\include\xutility(594): note: see reference to class template instantiation 'boost::archive::iterators::binary_from_base64<boost::archive::iterators::remove_whitespace<boost::archive::iterators::istream_iterator<CharType>>,int>' being compiled
C:\tools\boost\1.61.0_draeger02\boost/iterator/iterator_traits.hpp(41): note: see reference to class template instantiation 'std::iterator_traits<Iterator>' being compiled
        with
        [
            Iterator=boost::archive::iterators::binary_from_base64<boost::archive::iterators::remove_whitespace<boost::archive::iterators::istream_iterator<CharType>>,int>
        ]
C:\tools\boost\1.61.0_draeger02\boost/mpl/eval_if.hpp(41): note: see reference to class template instantiation 'boost::iterators::iterator_difference<Base>' being compiled
        with
        [
            Base=boost::archive::iterators::binary_from_base64<boost::archive::iterators::remove_whitespace<boost::archive::iterators::istream_iterator<CharType>>,int>
        ]
C:\tools\boost\1.61.0_draeger02\boost/iterator/iterator_adaptor.hpp(156): note: see reference to class template instantiation 'boost::mpl::eval_if<boost::is_same<T,boost::iterators::use_default>,DefaultNullaryFn,boost::mpl::identity<T>>' being compiled
        with
        [
            T=boost::iterators::use_default,
            DefaultNullaryFn=boost::iterators::iterator_difference<boost::archive::iterators::binary_from_base64<boost::archive::iterators::remove_whitespace<boost::archive::iterators::istream_iterator<CharType>>,int>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/iterator/iterator_adaptor.hpp(205): note: see reference to class template instantiation 'boost::iterators::detail::ia_dflt_help<Difference,boost::iterators::iterator_difference<Base>>' being compiled
        with
        [
            Difference=boost::iterators::use_default,
            Base=boost::archive::iterators::binary_from_base64<boost::archive::iterators::remove_whitespace<boost::archive::iterators::istream_iterator<CharType>>,int>
        ]
C:\tools\boost\1.61.0_draeger02\boost/iterator/iterator_adaptor.hpp(254): note: see reference to class template instantiation 'boost::iterators::detail::iterator_adaptor_base<Derived,Base,Value,Traversal,Reference,Difference>' being compiled
        with
        [
            Derived=boost::archive::iterators::transform_width<boost::archive::iterators::binary_from_base64<boost::archive::iterators::remove_whitespace<boost::archive::iterators::istream_iterator<CharType>>,int>,8,6,CharType>,
            Base=boost::archive::iterators::binary_from_base64<boost::archive::iterators::remove_whitespace<boost::archive::iterators::istream_iterator<CharType>>,int>,
            Value=CharType,
            Traversal=boost::iterators::single_pass_traversal_tag,
            Reference=CharType,
            Difference=boost::iterators::use_default
        ]
C:\tools\boost\1.61.0_draeger02\boost/archive/iterators/transform_width.hpp(53): note: see reference to class template instantiation 'boost::iterators::iterator_adaptor<boost::archive::iterators::transform_width<boost::archive::iterators::binary_from_base64<boost::archive::iterators::remove_whitespace<boost::archive::iterators::istream_iterator<CharType>>,int>,8,6,CharType>,Base,CharType,boost::iterators::single_pass_traversal_tag,CharType,boost::iterators::use_default>' being compiled
        with
        [
            Base=boost::archive::iterators::binary_from_base64<boost::archive::iterators::remove_whitespace<boost::archive::iterators::istream_iterator<CharType>>,int>,
            CharType=CharType
        ]
C:\tools\boost\1.61.0_draeger02\boost/archive/impl/basic_text_iprimitive.ipp(87): note: see reference to class template instantiation 'boost::archive::iterators::transform_width<boost::archive::iterators::binary_from_base64<boost::archive::iterators::remove_whitespace<boost::archive::iterators::istream_iterator<CharType>>,int>,8,6,CharType>' being compiled
C:\tools\boost\1.61.0_draeger02\boost/archive/impl/basic_text_iprimitive.ipp(57): note: while compiling class template member function 'void boost::archive::basic_text_iprimitive<std::istream>::load_binary(void *,size_t)'
C:\tools\boost\1.61.0_draeger02\libs\serialization\src\basic_text_iprimitive.cpp(26): note: see reference to class template instantiation 'boost::archive::basic_text_iprimitive<std::istream>' being compiled
basic_text_oprimitive.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/extended_type_info_typeid.obj
extended_type_info.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/polymorphic_iarchive.obj
extended_type_info_no_rtti.cpp
codecvt_null.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/polymorphic_oarchive.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/stl_port.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/text_iarchive.obj
stl_port.cpp
binary_iarchive.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/text_oarchive.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/void_cast.obj
binary_oarchive.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/xml_archive_exception.obj
extended_type_info_typeid.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/xml_grammar.obj
void_cast.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/xml_iarchive.obj
polymorphic_iarchive.cpp
xml_archive_exception.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/xml_oarchive.obj
polymorphic_oarchive.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/basic_text_wiprimitive.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/basic_text_woprimitive.obj
text_iarchive.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/binary_wiarchive.obj
text_oarchive.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/binary_woarchive.obj
basic_text_wiprimitive.cpp
basic_text_woprimitive.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/text_wiarchive.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/text_woarchive.obj
xml_oarchive.cpp
C:\tools\boost\1.61.0_draeger02\boost/archive/iterators/mb_from_wchar.hpp(87): warning C4189: 'r': local variable is initialized but not referenced
C:\tools\boost\1.61.0_draeger02\boost/archive/iterators/mb_from_wchar.hpp(83): note: while compiling class template member function 'void boost::archive::iterators::mb_from_wchar<boost::archive::iterators::xml_escape<InputIterator>>::fill(void)'
        with
        [
            InputIterator=const wchar_t *
        ]
C:\tools\boost\1.61.0_draeger02\boost/archive/iterators/mb_from_wchar.hpp(63): note: see reference to function template instantiation 'void boost::archive::iterators::mb_from_wchar<boost::archive::iterators::xml_escape<InputIterator>>::fill(void)' being compiled
        with
        [
            InputIterator=const wchar_t *
        ]
C:\tools\boost\1.61.0_draeger02\boost/archive/impl/xml_oarchive_impl.ipp(46): note: see reference to class template instantiation 'boost::archive::iterators::mb_from_wchar<boost::archive::iterators::xml_escape<InputIterator>>' being compiled
        with
        [
            InputIterator=const wchar_t *
        ]
C:\tools\boost\1.61.0_draeger02\boost/archive/impl/xml_oarchive_impl.ipp(59): note: see reference to function template instantiation 'void boost::archive::save_iterator<const _Elem*>(std::ostream &,InputIterator,InputIterator)' being compiled
        with
        [
            _Elem=wchar_t,
            InputIterator=const wchar_t *
        ]
C:\tools\boost\1.61.0_draeger02\boost/archive/impl/xml_oarchive_impl.ipp(55): note: while compiling class template member function 'void boost::archive::xml_oarchive_impl<boost::archive::xml_oarchive>::save(const std::wstring &)'
C:\tools\boost\1.61.0_draeger02\boost/archive/xml_oarchive.hpp(119): note: see reference to class template instantiation 'boost::archive::xml_oarchive_impl<boost::archive::xml_oarchive>' being compiled
xml_iarchive.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/utf8_codecvt_facet.obj
binary_wiarchive.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/xml_wgrammar.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/xml_wiarchive.obj
xml_grammar.cpp
c:\tools\boost\1.61.0_draeger02\libs\serialization\src\basic_xml_grammar.ipp(148): warning C4244: 'initializing': conversion from 'const unsigned int' to 'char', possible loss of data
c:\tools\boost\1.61.0_draeger02\libs\serialization\src\basic_xml_grammar.ipp(147): note: while compiling class template member function 'void boost::archive::xml::append_char<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>::operator ()(const unsigned int) const'
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/scanner.hpp(132): note: see reference to function template instantiation 'void boost::archive::xml::append_char<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>::operator ()(const unsigned int) const' being compiled
c:\tools\boost\1.61.0_draeger02\libs\serialization\src\basic_xml_grammar.ipp(290): note: see reference to class template instantiation 'boost::archive::xml::append_char<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>' being compiled
c:\tools\boost\1.61.0_draeger02\libs\serialization\src\basic_xml_grammar.ipp(238): note: while compiling class template member function 'boost::archive::basic_xml_grammar<char>::basic_xml_grammar(void)'
C:\tools\boost\1.61.0_draeger02\libs\serialization\src\xml_grammar.cpp(52): note: see reference to class template instantiation 'boost::archive::basic_xml_grammar<char>' being compiled
c:\tools\boost\1.61.0_draeger02\libs\serialization\src\basic_xml_grammar.ipp(148): warning C4244: 'initializing': conversion from 'const unsigned int' to 'const char', possible loss of data
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/scanner.hpp(132): warning C4244: 'argument': conversion from 'const int' to 'const int_least16_t', possible loss of data
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/scanner.hpp(163): note: see reference to function template instantiation 'void boost::spirit::classic::attributed_action_policy<AttrT>::call<ActorT,IteratorT>(const ActorT &,AttrT &,const IteratorT &,const IteratorT &)' being compiled
        with
        [
            AttrT=int,
            ActorT=boost::archive::xml::assign_impl<int_least16_t>,
            IteratorT=iterator_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/scanner.hpp(163): note: see reference to function template instantiation 'void boost::spirit::classic::attributed_action_policy<AttrT>::call<ActorT,IteratorT>(const ActorT &,AttrT &,const IteratorT &,const IteratorT &)' being compiled
        with
        [
            AttrT=int,
            ActorT=boost::archive::xml::assign_impl<int_least16_t>,
            IteratorT=iterator_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/actions.hpp(116): note: see reference to function template instantiation 'void boost::spirit::classic::action_policy::do_action<ActionT,const T,iterator_t>(const ActorT &,AttrT &,const IteratorT &,const IteratorT &) const' being compiled
        with
        [
            ActionT=boost::archive::xml::assign_impl<int_least16_t>,
            T=int,
            ActorT=boost::archive::xml::assign_impl<int_least16_t>,
            AttrT=int,
            IteratorT=iterator_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(61): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::action<DerivedT,boost::archive::xml::assign_impl<int_least16_t>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            T=int,
            DerivedT=boost::spirit::classic::int_parser<int,10,1,-1>,
            ScannerT=boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(61): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::action<DerivedT,boost::archive::xml::assign_impl<int_least16_t>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            T=int,
            DerivedT=boost::spirit::classic::int_parser<int,10,1,-1>,
            ScannerT=boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(60): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,DerivedT>,DerivedT>,boost::spirit::classic::chlit<CharT>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>,
            CharT=wchar_t,
            ScannerT=boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(60): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,DerivedT>,DerivedT>,boost::spirit::classic::chlit<CharT>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>,
            CharT=wchar_t,
            ScannerT=boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/rule.ipp(241): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,DerivedT>,DerivedT>,boost::spirit::classic::chlit<CharT>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<CharT>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>,
            CharT=wchar_t,
            ScannerT=boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/rule.ipp(241): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,DerivedT>,DerivedT>,boost::spirit::classic::chlit<CharT>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<CharT>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>,
            CharT=wchar_t,
            ScannerT=boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/rule.ipp(240): note: while compiling class template member function 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::impl::concrete_parser<ParserT,boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t>::do_parse_virtual(const ScannerT &) const'
        with
        [
            ParserT=boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::chlit<wchar_t>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<wchar_t>>,
            ScannerT=boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spbinary_woarchive.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/serialization/src/xml_woarchive.obj
irit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/rule.hpp(137): note: see reference to class template instantiation 'boost::spirit::classic::impl::concrete_parser<ParserT,boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t>' being compiled
        with
        [
            ParserT=boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::chlit<wchar_t>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<wchar_t>>
        ]
c:\tools\boost\1.61.0_draeger02\libs\serialization\src\basic_xml_grammar.ipp(323): note: see reference to function template instantiation 'boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t> &boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>::operator =<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,DerivedT>,DerivedT>,boost::spirit::classic::chlit<CharT>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<CharT>>>(const ParserT &)' being compiled
        with
        [
            DerivedT=boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>,
            CharT=wchar_t,
            ParserT=boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::chlit<wchar_t>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<wchar_t>>
        ]
c:\tools\boost\1.61.0_draeger02\libs\serialization\src\basic_xml_grammar.ipp(317): note: see reference to function template instantiation 'boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t> &boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>::operator =<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,DerivedT>,DerivedT>,boost::spirit::classic::chlit<CharT>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<CharT>>>(const ParserT &)' being compiled
        with
        [
            DerivedT=boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>,
            CharT=wchar_t,
            ParserT=boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<char>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::chlit<wchar_t>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<wchar_t>>
        ]
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/signals/src/connection.obj
utf8_codecvt_facet.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/signals/src/named_slot_map.obj
text_woarchive.cpp
text_wiarchive.cpp
C:\tools\boost\1.61.0_draeger02\boost/archive/impl/text_wiarchive_impl.ipp(60): warning C4244: 'argument': conversion from 'int' to 'char', possible loss of data
C:\tools\boost\1.61.0_draeger02\boost/archive/impl/text_wiarchive_impl.ipp(48): note: while compiling class template member function 'void boost::archive::text_wiarchive_impl<boost::archive::text_wiarchive>::load(std::string &)'
C:\tools\boost\1.61.0_draeger02\boost/archive/text_wiarchive.hpp(118): note: see reference to class template instantiation 'boost::archive::text_wiarchive_impl<boost::archive::text_wiarchive>' being compiled
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/signals/src/signal_base.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/signals/src/slot.obj
connection.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/signals/src/trackable.obj
xml_woarchive.cpp
C:\tools\boost\1.61.0_draeger02\boost/archive/iterators/wchar_from_mb.hpp(166): warning C4189: 'r': local variable is initialized but not referenced
C:\tools\boost\1.61.0_draeger02\boost/archive/iterators/wchar_from_mb.hpp(146): note: while compiling class template member function 'void boost::archive::iterators::wchar_from_mb<boost::archive::iterators::xml_escape<InputIterator>>::drain(void)'
        with
        [
            InputIterator=const char *
        ]
C:\tools\boost\1.61.0_draeger02\boost/archive/iterators/wchar_from_mb.hpp(131): note: see reference to function template instantiation 'void boost::archive::iterators::wchar_from_mb<boost::archive::iterators::xml_escape<InputIterator>>::drain(void)' being compiled
        with
        [
            InputIterator=const char *
        ]
C:\tools\boost\1.61.0_draeger02\boost/archive/impl/xml_woarchive_impl.ipp(56): note: see reference to function template instantiation 'boost::archive::iterators::wchar_from_mb<boost::archive::iterators::xml_escape<InputIterator>>::wchar_from_mb<InputIterator>(T)' being compiled
        with
        [
            InputIterator=const char *,
            T=const char *
        ]
C:\tools\boost\1.61.0_draeger02\boost/archive/impl/xml_woarchive_impl.ipp(55): note: see reference to function template instantiation 'boost::archive::iterators::wchar_from_mb<boost::archive::iterators::xml_escape<InputIterator>>::wchar_from_mb<InputIterator>(T)' being compiled
        with
        [
            InputIterator=const char *,
            T=const char *
        ]
C:\tools\boost\1.61.0_draeger02\boost/archive/impl/xml_woarchive_impl.ipp(70): note: see reference to function template instantiation 'void boost::archive::save_iterator<const char*>(std::wostream &,InputIterator,InputIterator)' being compiled
        with
        [
            InputIterator=const char *
        ]
C:\tools\boost\1.61.0_draeger02\boost/archive/impl/xml_woarchive_impl.ipp(64): note: while compiling class template member function 'void boost::archive::xml_woarchive_impl<boost::archive::xml_woarchive>::save(const std::string &)'
C:\tools\boost\1.61.0_draeger02\boost/archive/xml_woarchive.hpp(113): note: see reference to class template instantiation 'boost::archive::xml_woarchive_impl<boost::archive::xml_woarchive>' being compiled
xml_wiarchive.cpp
C:\tools\boost\1.61.0_draeger02\boost/archive/iterators/mb_from_wchar.hpp(87): warning C4189: 'r': local variable is initialized but not referenced
C:\tools\boost\1.61.0_draeger02\boost/archive/iterators/mb_from_wchar.hpp(83): note: while compiling class template member function 'void boost::archive::iterators::mb_from_wchar<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::fill(void)'
C:\tools\boost\1.61.0_draeger02\boost/archive/iterators/mb_from_wchar.hpp(63): note: see reference to function template instantiation 'void boost::archive::iterators::mb_from_wchar<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>::fill(void)' being compiled
C:\tools\boost\1.61.0_draeger02\boost/archive/impl/xml_wiarchive_impl.ipp(55): note: see reference to class template instantiation 'boost::archive::iterators::mb_from_wchar<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>>' being compiled
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/system/src/error_code.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/compiler_log_formatter.obj
named_slot_map.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/debug.obj
xml_wgrammar.cpp
c:\tools\boost\1.61.0_draeger02\libs\serialization\src\basic_xml_grammar.ipp(148): warning C4244: 'initializing': conversion from 'const unsigned int' to 'wchar_t', possible loss of data
c:\tools\boost\1.61.0_draeger02\libs\serialization\src\basic_xml_grammar.ipp(147): note: while compiling class template member function 'void boost::archive::xml::append_char<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>::operator ()(const unsigned int) const'
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/scanner.hpp(132): note: see reference to function template instantiation 'void boost::archive::xml::append_char<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>::operator ()(const unsigned int) const' being compiled
c:\tools\boost\1.61.0_draeger02\libs\serialization\src\basic_xml_grammar.ipp(290): note: see reference to class template instantiation 'boost::archive::xml::append_char<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>>' being compiled
c:\tools\boost\1.61.0_draeger02\libs\serialization\src\basic_xml_grammar.ipp(238): note: while compiling class template member function 'boost::archive::basic_xml_grammar<wchar_t>::basic_xml_grammar(void)'
C:\tools\boost\1.61.0_draeger02\libs\serialization\src\xml_wgrammar.cpp(51): note: see reference to class template instantiation 'boost::archive::basic_xml_grammar<wchar_t>' being compiled
c:\tools\boost\1.61.0_draeger02\libs\serialization\src\basic_xml_grammar.ipp(148): warning C4244: 'initializing': conversion from 'const unsigned int' to 'const wchar_t', possible loss of data
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/scanner.hpp(132): warning C4244: 'argument': conversion from 'const int' to 'const int_least16_t', possible loss of data
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/scanner.hpp(163): note: see reference to function template instantiation 'void boost::spirit::classic::attributed_action_policy<AttrT>::call<ActorT,IteratorT>(const ActorT &,AttrT &,const IteratorT &,const IteratorT &)' being compiled
        with
        [
            AttrT=int,
            ActorT=boost::archive::xml::assign_impl<int_least16_t>,
            IteratorT=iterator_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/scanner.hpp(163): note: see reference to function template instantiation 'void boost::spirit::classic::attributed_action_policy<AttrT>::call<ActorT,IteratorT>(const ActorT &,AttrT &,const IteratorT &,const IteratorT &)' being compiled
        with
        [
            AttrT=int,
            ActorT=boost::archive::xml::assign_impl<int_least16_t>,
            IteratorT=iterator_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/actions.hpp(116): note: see reference to function template instantiation 'void boost::spirit::classic::action_policy::do_action<ActionT,const T,iterator_t>(const ActorT &,AttrT &,const IteratorT &,const IteratorT &) const' being compiled
        with
        [
            ActionT=boost::archive::xml::assign_impl<int_least16_t>,
            T=int,
            ActorT=boost::archive::xml::assign_impl<int_least16_t>,
            AttrT=int,
            IteratorT=iterator_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(61): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::action<DerivedT,boost::archive::xml::assign_impl<int_least16_t>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            T=int,
            DerivedT=boost::spirit::classic::int_parser<int,10,1,-1>,
            ScannerT=boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(61): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::action<DerivedT,boost::archive::xml::assign_impl<int_least16_t>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            T=int,
            DerivedT=boost::spirit::classic::int_parser<int,10,1,-1>,
            ScannerT=boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(60): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,DerivedT>,DerivedT>,boost::spirit::classic::chlit<CharT>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>,
            CharT=wchar_t,
            ScannerT=boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(60): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,DerivedT>,DerivedT>,boost::spirit::classic::chlit<CharT>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>,
            CharT=wchar_t,
            ScannerT=boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/rule.ipp(241): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,DerivedT>,DerivedT>,boost::spirit::classic::chlit<CharT>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<CharT>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>,
            CharT=wchar_t,
            ScannerT=boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/rule.ipp(241): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,DerivedT>,DerivedT>,boost::spirit::classic::chlit<CharT>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<CharT>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>,
            CharT=wchar_t,
            ScannerT=boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/rule.ipp(240): note: while compiling class template member function 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::impl::concrete_parser<ParserT,boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t>::do_parse_virtual(const ScannerT &) const'
        with
        [
            ParserT=boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::chlit<wchar_t>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<wchar_t>>,
            ScannerT=boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::sslot.cpp
signal_base.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/decorator.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/execution_monitor.obj
pirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/rule.hpp(137): note: see reference to class template instantiation 'boost::spirit::classic::impl::concrete_parser<ParserT,boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t>' being compiled
        with
        [
            ParserT=boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::chlit<wchar_t>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<wchar_t>>
        ]
c:\tools\boost\1.61.0_draeger02\libs\serialization\src\basic_xml_grammar.ipp(323): note: see reference to function template instantiation 'boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t> &boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>::operator =<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,DerivedT>,DerivedT>,boost::spirit::classic::chlit<CharT>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<CharT>>>(const ParserT &)' being compiled
        with
        [
            DerivedT=boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>,
            CharT=wchar_t,
            ParserT=boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::chlit<wchar_t>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<wchar_t>>
        ]
c:\tools\boost\1.61.0_draeger02\libs\serialization\src\basic_xml_grammar.ipp(317): note: see reference to function template instantiation 'boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t> &boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>::operator =<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,DerivedT>,DerivedT>,boost::spirit::classic::chlit<CharT>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<CharT>>>(const ParserT &)' being compiled
        with
        [
            DerivedT=boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>,
            CharT=wchar_t,
            ParserT=boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::strlit<const char *>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::rule<boost::spirit::classic::scanner<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>>,boost::spirit::classic::chlit<wchar_t>>,boost::spirit::classic::action<boost::spirit::classic::int_parser<int,10,1,-1>,boost::archive::xml::assign_impl<int_least16_t>>>,boost::spirit::classic::chlit<wchar_t>>
        ]
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/framework.obj
trackable.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/plain_report_formatter.obj
error_code.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/progress_monitor.obj
compiler_log_formatter.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/results_collector.obj
debug.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/results_reporter.obj
decorator.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/test_tools.obj
execution_monitor.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/test_tree.obj
plain_report_formatter.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/unit_test_log.obj
progress_monitor.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/unit_test_main.obj
results_collector.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/unit_test_monitor.obj
framework.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/unit_test_parameters.obj
results_reporter.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/xml_log_formatter.obj
test_tools.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/test/src/xml_report_formatter.obj
test_tree.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/thread/src/win32/thread.obj
unit_test_log.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/thread/src/win32/tss_dll.obj
tss_dll.cpp
unit_test_monitor.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/thread/src/win32/tss_pe.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/thread/src/future.obj
unit_test_main.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/wave/src/instantiate_cpp_exprgrammar.obj
xml_log_formatter.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/wave/src/instantiate_cpp_grammar.obj
tss_pe.cpp
xml_report_formatter.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/wave/src/instantiate_cpp_literalgrs.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/wave/src/instantiate_defined_grammar.obj
future.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/wave/src/instantiate_predef_macros.obj
unit_test_parameters.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/wave/src/instantiate_re2c_lexer.obj
instantiate_cpp_exprgrammar.cpp
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1805): warning C4458: declaration of 'pointer' hides class member
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1469): note: see declaration of 'boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>::pointer'
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1660): note: see reference to function template instantiation 'bool boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>::IsAliasedRange<const char*>(Iterator,Iterator)' being compiled
        with
        [
            Iterator=const char *
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1660): note: see reference to function template instantiation 'bool boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>::IsAliasedRange<const char*>(Iterator,Iterator)' being compiled
        with
        [
            Iterator=const char *
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1656): note: while compiling class template member function 'boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>> &boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>::append(const char *,const unsigned int)'
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1725): note: see reference to function template instantiation 'boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>> &boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>::append(const char *,const unsigned int)' being compiled
C:\tools\boost\1.61.0_draeger02\boost/wave/util/file_position.hpp(85): note: see reference to class template instantiation 'boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>' being compiled
C:\tools\boost\1.61.0_draeger02\boost/wave/util/file_position.hpp(161): note: see reference to class template instantiation 'boost::wave::util::file_position<boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>>' being compiled
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(101): warning C4459: declaration of 'iter_policy_t' hides global declaration
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/skipper.hpp(184): note: see declaration of 'boost::spirit::classic::iter_policy_t'
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(155): note: see reference to function template instantiation 'boost::spirit::classic::parse_info<iterator_type> boost::spirit::classic::impl::phrase_parser<SkipT>::parse<IteratorT,DerivedT>(const IteratorT &,const IteratorT &,const ParserT &,const SkipT &)' being compiled
        with
        [
            SkipT=boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::chlit<boost::wave::token_id>,boost::spirit::classic::chlit<boost::wave::token_id>>,boost::spirit::classic::chlit<boost::wave::token_id>>,
            IteratorT=std::_List_const_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>>,
            DerivedT=boost::spirit::classic::action<boost::wave::grammars::expression_grammar,boost::spirit::classic::ref_value_actor<boost::wave::grammars::closures::closure_value,boost::spirit::classic::assign_action>>,
            ParserT=boost::spirit::classic::action<boost::wave::grammars::expression_grammar,boost::spirit::classic::ref_value_actor<boost::wave::grammars::closures::closure_value,boost::spirit::classic::assign_action>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(154): note: see reference to function template instantiation 'boost::spirit::classic::parse_info<iterator_type> boost::spirit::classic::impl::phrase_parser<SkipT>::parse<IteratorT,DerivedT>(const IteratorT &,const IteratorT &,const ParserT &,const SkipT &)' being compiled
        with
        [
            SkipT=boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::chlit<boost::wave::token_id>,boost::spirit::classic::chlit<boost::wave::token_id>>,boost::spirit::classic::chlit<boost::wave::token_id>>,
            IteratorT=std::_List_const_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>>,
            DerivedT=boost::spirit::classic::action<boost::wave::grammars::expression_grammar,boost::spirit::classic::ref_value_actor<boost::wave::grammars::closures::closure_value,boost::spirit::classic::assign_action>>,
            ParserT=boost::spirit::classic::action<boost::wave::grammars::expression_grammar,boost::spirit::classic::ref_value_actor<boost::wave::grammars::closures::closure_value,boost::spirit::classic::assign_action>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(782): note: see reference to function template instantiation 'boost::spirit::classic::parse_info<iterator_type> boost::spirit::classic::parse<std::_List_const_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>>,boost::spirit::classic::action<DerivedT,boost::spirit::classic::ref_value_actor<boost::wave::grammars::closures::closure_value,boost::spirit::classic::assign_action>>,boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::chlit<boost::wave::token_id>,boost::spirit::classic::chlit<boost::wave::token_id>>,boost::spirit::classic::chlit<boost::wave::token_id>>>(const IteratorT &,const IteratorT &,const boost::spirit::classic::parser<boost::spirit::classic::action<DerivedT,boost::spirit::classic::ref_value_actor<boost::wave::grammars::closures::closure_value,boost::spirit::classic::assign_action>>> &,const boost::spirit::classic::parser<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::chlit<boost::wave::token_id>,boost::spirit::classic::chlit<boost::wave::token_id>>,boost::spirit::classic::chlit<boost::wave::token_id>>> &)' being compiled
        with
        [
            DerivedT=boost::wave::grammars::expression_grammar,
            IteratorT=std::_List_const_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(763): note: while compiling class template member function 'bool boost::wave::grammars::expression_grammar_gen<token_type>::evaluate(const std::_List_const_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>> &,const std::_List_const_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>> &,const boost::wave::util::file_position<boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,booinstantiate_defined_grammar.cpp
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(101): warning C4459: declaration of 'iter_policy_t' hides global declaration
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/skipper.hpp(184): note: see declaration of 'boost::spirit::classic::iter_policy_t'
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(155): note: see reference to function template instantiation 'boost::spirit::classic::parse_info<boost::wave::util::unput_queue_iterator<LexIteratorT,boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>> boost::spirit::classic::impl::phrase_parser<SkipT>::parse<IteratorT,DerivedT>(const IteratorT &,const IteratorT &,const ParserT &,const SkipT &)' being compiled
        with
        [
            LexIteratorT=lexer_type,
            SkipT=boost::spirit::classic::alternative<boost::spirit::classic::chlit<boost::wave::token_id>,boost::spirit::classic::chlit<boost::wave::token_id>>,
            IteratorT=boost::wave::util::unput_queue_iterator<lexer_type,boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>,
            DerivedT=boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>,
            ParserT=boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(154): note: see reference to function template instantiation 'boost::spirit::classic::parse_info<boost::wave::util::unput_queue_iterator<LexIteratorT,boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>> boost::spirit::classic::impl::phrase_parser<SkipT>::parse<IteratorT,DerivedT>(const IteratorT &,const IteratorT &,const ParserT &,const SkipT &)' being compiled
        with
        [
            LexIteratorT=lexer_type,
            SkipT=boost::spirit::classic::alternative<boost::spirit::classic::chlit<boost::wave::token_id>,boost::spirit::classic::chlit<boost::wave::token_id>>,
            IteratorT=boost::wave::util::unput_queue_iterator<lexer_type,boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>,
            DerivedT=boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,st::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>> &,bool,boost::wave::grammars::value_error &)'
C:\tools\boost\1.61.0_draeger02\libs\wave\src\instantiate_cpp_exprgrammar.cpp(44): note: see reference to class template instantiation 'boost::wave::grammars::expression_grammar_gen<token_type>' being compiled
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(102): warning C4459: declaration of 'scanner_policies_t' hides global declaration
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/skipper.hpp(185): note: see declaration of 'boost::spirit::classic::scanner_policies_t'
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/attribute/closure.hpp(84): warning C4709: comma operator within array index expression
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/attribute/closure_context.hpp(46): note: see reference to function template instantiation 'ResultT &boost::spirit::classic::closure_context<DerivedT>::post_parse<ResultT,ParserT,ScannerT>(ResultT &,const ParserT &,const ScannerT &)' being compiled
        with
        [
            ResultT=result_t,
            DerivedT=boost::wave::grammars::closures::cpp_expr_closure,
            ParserT=boost::spirit::classic::grammar<boost::wave::grammars::expression_grammar,boost::spirit::classic::closure_context<boost::wave::grammars::closures::cpp_expr_closure>>,
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/attribute/closure_context.hpp(46): note: see reference to function template instantiation 'ResultT &boost::spirit::classic::closure_context<DerivedT>::post_parse<ResultT,ParserT,ScannerT>(ResultT &,const ParserT &,const ScannerT &)' being compiled
        with
        [
            ResultT=result_t,
            DerivedT=boost::wave::grammars::closures::cpp_expr_closure,
            ParserT=boost::spirit::classic::grammar<boost::wave::grammars::expression_grammar,boost::spirit::classic::closure_context<boost::wave::grammars::closures::cpp_expr_closure>>,
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(65): note: see reference to function template instantiation 'ResultT &boost::spirit::classic::closure_context_linker<boost::spirit::classic::closure_context<DerivedT>>::post_parse<result_t,boost::spirit::classic::grammar<boost::wave::grammars::expression_grammar,boost::spirit::classic::closure_context<DerivedT>>,scanner_t>(ResultT &,const ParserT &,const ScannerT &)' being compiled
        with
        [
            ResultT=result_t,
            DerivedT=boost::wave::grammars::closures::cpp_expr_closure,
            ParserT=boost::spirit::classic::grammar<boost::wave::grammars::expression_grammar,boost::spirit::classic::closure_context<boost::wave::grammars::closures::cpp_expr_closure>>,
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(65): note: see reference to function template instantiation 'ResultT &boost::spirit::classic::closure_context_linker<boost::spirit::classic::closure_context<DerivedT>>::post_parse<result_t,boost::spirit::classic::grammar<boost::wave::grammars::expression_grammar,boost::spirit::classic::closure_context<DerivedT>>,scanner_t>(ResultT &,const ParserT &,const ScannerT &)' being compiled
        with
        [
            ResultT=result_t,
            DerivedT=boost::wave::grammars::closures::cpp_expr_closure,
            ParserT=boost::spirit::classic::grammar<boost::wave::grammars::expression_grammar,boost::spirit::classic::closure_context<boost::wave::grammars::closures::cpp_expr_closure>>,
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/actions.hpp(112): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::grammar<boost::wave::grammars::expression_grammar,boost::spirit::classic::closure_context<DerivedT>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            T=boost::wave::grammars::closures::closure_value,
            DerivedT=boost::wave::grammars::closures::cpp_expr_closure,
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/actions.hpp(112): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::grammar<boost::wave::grammars::expression_grammar,boost::spirit::classic::closure_context<DerivedT>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            T=boost::wave::grammars::closures::closure_value,
            DerivedT=boost::wave::grammars::closures::cpp_expr_closure,
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(109): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::action<DerivedT,boost::spirit::classic::ref_value_actor<T,boost::spirit::classic::assign_action>>::parse<scanner_t>(const ScannerT &) const' being compiled
        with
        [
            T=boost::wave::grammars::closures::closure_value,
            DerivedT=boost::wave::grammars::expression_grammar,
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(109): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::action<DerivedT,boost::spirit::classic::ref_value_actor<T,boost::spirit::classic::assign_action>>::parse<scanner_t>(const ScannerT &) const' being compiled
        with
        [
            T=boost::wave::grammars::closures::closure_value,
            DerivedT=boost::wave::grammars::expression_grammar,
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(155): note: see reference to function template instantiation 'boost::spirit::classic::parse_info<iterator_type> boost::spirit::classic::impl::phrase_parser<SkipT>::parse<IteratorT,DerivedT>(const IteratorT &,const IteratorT &,const ParserT &,const SkipT &)' being compiled
        with
        [
            SkipT=boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::chlit<boost::wave::token_id>,boost::spirit::classic::chlit<boost::wave::token_id>>,boost::spirit::classic::chlit<boost::wave::token_id>>,
            IteratorT=std::_List_const_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>>,
            DerivedT=boost::spirit::classic::action<boost::wave::grammars::expression_grammar,boost::spirit::classic::ref_value_actor<boost::wave::grammars::closures::closure_value,boost::spirit::classic::assign_action>>,
            ParserT=boost::spirit::classic::action<boost::wave::grammars::expression_grammar,boost::spirit::classic::ref_value_actor<boost::wave::grammars::closures::closure_value,boost::spirit::classic::assign_action>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(154): note: see reference to function template instantiation 'boost::spirit::classic::parse_info<iterator_type> boost::spirit::classic::impl::phrase_parser<SkipT>::parse<IteratorT,DerivedT>(const IteratorT &,const IteratorT &,const ParserT &,const SkipT &)' being compiled
        with
        [
            SkipT=boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::chlit<boost::wave::token_id>,boost::spirit::classic::chlit<boost::wave::token_id>>,boost::spirit::classic::chlit<boost::wave::token_id>>,
            IteratorT=std::_List_const_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>>,
            DerivedT=boost::spirit::classic::action<boost::wave::grammars::expression_grammar,boost::spirit::classic::ref_value_actor<boost::wave::grammars::closures::closure_value,boost::spirit::classic::assign_action>>,
            ParserT=boost::spirit::classic::action<boost::wave::grammars::expression_grammar,boost::spirit::classic::ref_value_actor<boost::wave::grammars::closures::closure_value,boost::spirit::classic::assign_action>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(367): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(332): note: while compiling class template member function 'boost::wave::grammars::expression_grammar::definition<ScannerT>::definition(const boost::wave::grammars::expression_grammar &)'
        with
        [
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(160): note: see reference to function template instantiation 'boost::wave::grammars::expression_grammar::definition<ScannerT>::definition(const boost::wave::grammars::expression_grammar &)' being compiled
        with
        [
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(255): note: see reference to class template instantiation 'boost::wave::grammars::expression_grammar::definition<ScannerT>' being compiled
        with
        [
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(274): note: see reference to function template instantiation 'void boost::spirit::classic::impl::call_helper<0>::do_<result_t,definition_t,ScannerT>(RT &,DefinitionT &,const ScannerT &)' being compiled
        with
        [
            ScannerT=scanner_t,
            RT=result_t,
            DefinitionT=definition_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(57): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::impl::grammar_parser_parse<0,boost::wave::grammars::expression_grammar,boost::spirit::classic::closure_context<DerivedT>,ScannerT>(const boost::spirit::classic::grammar<boost::wave::grammars::expression_grammar,boost::spirit::classic::closure_context<DerivedT>> *,const ScannerT &)' being compiled
        with
        [
            T=boost::wave::grammars::closures::closure_value,
            DerivedT=boost::wave::grammars::closures::cpp_expr_closure,
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(65): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::grammar<boost::wave::grammars::expression_grammar,boost::spirit::classic::closure_context<DerivedT>>::parse_main<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            T=boost::wave::grammars::closures::closure_value,
            DerivedT=boost::wave::grammars::closures::cpp_expr_closure,
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(65): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::grammar<boost::wave::grammars::expression_grammar,boost::spirit::classic::closure_context<DerivedT>>::parse_main<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            T=boost::wave::grammars::closures::closure_value,
            DerivedT=boost::wave::grammars::closures::cpp_expr_closure,
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(376): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', siinstantiate_cpp_grammar.cpp
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(335): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(208): note: while compiling class template member function 'boost::wave::grammars::cpp_grammar<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,TokenContainerT>::definition<ScannerT>::definition(const boost::wave::grammars::cpp_grammar<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,TokenContainerT> &)'
        with
        [
            TokenContainerT=token_sequence_type,
            ScannerT=scanner_type
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(160): note: see reference to function template instantiation 'boost::wave::grammars::cpp_grammar<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,TokenContainerT>::definition<ScannerT>::definition(const boost::wave::grammars::cpp_grammar<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,TokenContainerT> &)' being compiled
        with
        [
            TokenContainerT=token_sequence_type,
            ScannerT=scanner_type
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(255): note: see reference to class template instantiation 'boost::wave::grammars::cpp_grammar<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,TokenContainerT>::definition<ScannerT>' being compiled
        with
        [
            TokenContainerT=token_sequence_type,
            ScannerT=scanner_type
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(274): note: see reference to function template instantiation 'void boost::spirit::classic::impl::call_helper<0>::do_<result_t,definition_t,ScannerT>(RT &,DefinitionT &,const ScannerT &)' being compiled
        with
        [
            ScannerT=scanner_type,
            RT=result_t,
            DefinitionT=definition_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(57): note: see reference to function template instantiation 'boost::spirit::classic::tree_match<IteratorT,NodeFactoryT,T> boost::spirit::classic::impl::grammar_parser_parse<0,boost::wave::grammars::cpp_grammar<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,TokenContainerT>,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>,ScannerT>(const boost::spirit::classic::grammar<boost::wave::grammars::cpp_grammar<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,TokenContainerT>,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>> *,const ScannerT &)' being compiled
        with
        [
            IteratorT=boost::wave::cpplexer::lex_iterator<token_type>,
            NodeFactoryT=boost::wave::grammars::cpp_grammar_gen<lexer_type,token_sequence_type>::node_factory_type,
            T=boost::spirit::classic::nil_t,
            TokenContainerT=token_sequence_type,
            ScannerT=scanner_type
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(65): note: see reference to function template instantiation 'boost::spirit::classic::tree_match<IteratorT,NodeFactoryT,T> boost::spirit::classic::grammar<boost::wave::grammars::cpp_grammar<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,TokenContainerT>,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>>::parse_main<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            IteratorT=boost::wave::cpplexer::lex_iterator<token_type>,
            NodeFactoryT=boost::wave::grammars::cpp_grammar_gen<lexer_type,token_sequence_type>::node_factory_type,
            T=boost::spirit::classic::nil_t,
            TokenContainerT=token_sequence_type,
 instantiate_cpp_literalgrs.cpp
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/attribute/closure.hpp(84): warning C4709: comma operator within array index expression
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/attribute/closure_context.hpp(46): note: see reference to function template instantiation 'ResultT &boost::spirit::classic::closure_context<DerivedT>::post_parse<ResultT,ParserT,ScannerT>(ResultT &,const ParserT &,const ScannerT &)' being compiled
        with
        [
            ResultT=result_t,
            DerivedT=boost::wave::grammars::closures::intlit_closure,
            ParserT=boost::spirit::classic::grammar<boost::wave::grammars::intlit_grammar,boost::spirit::classic::closure_context<boost::wave::grammars::closures::intlit_closure>>,
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/attribute/closure_context.hpp(46): note: see reference to function template instantiation 'ResultT &boost::spirit::classic::closure_context<DerivedT>::post_parse<ResultT,ParserT,ScannerT>(ResultT &,const ParserT &,const ScannerT &)' being compiled
        with
        [
            ResultT=result_t,
            DerivedT=boost::wave::grammars::closures::intlit_closure,
            ParserT=boost::spirit::classic::grammar<boost::wave::grammars::intlit_grammar,boost::spirit::classic::closure_context<boost::wave::grammars::closures::intlit_closure>>,
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(65): note: see reference to function template instantiation 'ResultT &boost::spirit::classic::closure_context_linker<boost::spirit::classic::closure_context<DerivedT>>::post_parse<result_t,boost::spirit::classic::grammar<boost::wave::grammars::intlit_grammar,boost::spirit::classic::closure_context<DerivedT>>,scanner_t>(ResultT &,const ParserT &,const ScannerT &)' being compiled
        with
        [
            ResultT=result_t,
            DerivedT=boost::wave::grammars::closures::intlit_closure,
            ParserT=boost::spirit::classic::grammar<boost::wave::grammars::intlit_grammar,boost::spirit::classic::closure_context<boost::wave::grammars::closures::intlit_closure>>,
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(65): note: see reference to function template instantiation 'ResultT &boost::spirit::classic::closure_context_linker<boost::spirit::classic::closure_context<DerivedT>>::post_parse<result_t,boost::spirit::classic::grammar<boost::wave::grammars::intlit_grammar,boost::spirit::classic::closure_context<DerivedT>>,scanner_t>(ResultT &,const ParserT &,const ScannerT &)' being compiled
        with
        [
            ResultT=result_t,
            DerivedT=boost::wave::grammars::closures::intlit_closure,
            ParserT=boost::spirit::classic::grammar<boost::wave::grammars::intlit_grammar,boost::spirit::classic::closure_context<boost::wave::grammars::closures::intlit_closure>>,
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/actions.hpp(112): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::grammar<boost::wave::grammars::intlit_grammar,boost::spirit::classic::closure_context<DerivedT>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            T=unsigned long,
            DerivedT=boost::wave::grammars::closures::intlit_closure,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/actions.hpp(112): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::grammar<boost::wave::grammars:thread.cpp
0>>>,
            ParserT=boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_defined_grammar.hpp(170): note: see reference to function template instantiation 'boost::spirit::classic::parse_info<boost::wave::util::unput_queue_iterator<LexIteratorT,boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>> boost::spirit::classic::parse<boost::wave::util::unput_queue_iterator<LexIteratorT,boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>,DerivedT,boost::spirit::classic::alternative<boost::spirit::classic::chlit<boost::wave::token_id>,boost::spirit::classic::chlit<boost::wave::token_id>>>(const IteratorT &,const IteratorT &,const boost::spirit::classic::parser<DerivedT> &,const boost::spirit::classic::parser<boost::spirit::classic::alternative<boost::spirit::classic::chlit<boost::wave::token_id>,boost::spirit::classic::chlit<boost::wave::token_id>>> &)' being compiled
        with
        [
            LexIteratorT=lexer_type,
            DerivedT=boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>,
            IteratorT=boost::wave::util::unput_queue_iterator<lexer_type,boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_defined_grammar.hpp(164): note: while compiling class template member function 'boost::spirit::classic::parse_info<boost::wave::util::unput_queue_iterator<LexIteratorT,boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>> boost::wave::grammars::defined_grammar_gen<LexIteratorT>::parse_operator_defined(const boost::wave::util::unput_queue_iterator<LexIteratorT,boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>> &,const boost::wave::util::unput_queue_iterator<LexIteratorT,boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>> &,std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>> &)'
        with
        [
            LexIteratorT=lexer_type
        ]
C:\tools\boost\1.61.0_draeger02\libs\wave\src\instantiate_defined_grammar.cpp(44): note: see reference to class template instantiation 'boost::wave::grammars::defined_grammar_gen<lexer_type>' being compiled
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(102): warning C4459: declaration of 'scanner_policies_t' hides global declaration
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/skipper.hpp(185): note: see declaration of 'boost::spirit::classic::scanner_policies_t'
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_defined_grammar.hpp(88): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_defined_grammar.hpp(66): note: while compiling class template member function 'boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>::definition<ScannerT>::definition(const boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>> &)'
        with
        [
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(160): note: see reference to function template instantiation 'boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>::definition<ScannerT>::definition(const boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>> &)' being compiled
        with
        [
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(255): note: see reference to class template instantiation 'boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>::definition<ScannerT>' being compiled
        with
        [
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(274): note: see reference to function template instantiation 'void boost::spirit::classic::impl::call_helper<0>::do_<result_t,definition_t,ScannerT>(RT &,DefinitionT &,const ScannerT &)' being compiled
        with
        [
            ScannerT=scanner_t,
            RT=result_t,
            DefinitionT=definition_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(57): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::impl::grammar_parser_parse<0,boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::f***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/wave/src/instantiate_re2c_lexer_str.obj
instantiate_predef_macros.cpp
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_predef_macros_grammar.hpp(80): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_predef_macros_grammar.hpp(55): note: while compiling class template member function 'boost::wave::grammars::predefined_macros_grammar::definition<ScannerT>::definition(const boost::wave::grammars::predefined_macros_grammar &)'
        with
        [
            ScannerT=boost::spirit::classic::scanner<lexer_type,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,pt_match_policy_t,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(160): note: see reference to function template instantiation 'boost::wave::grammars::predefined_macros_grammar::definition<ScannerT>::definition(const boost::wave::grammars::predefined_macros_grammar &)' being compiled
        with
        [
            ScannerT=boost::spirit::classic::scanner<lexer_type,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,pt_match_policy_t,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(255): note: see reference to class template instantiation 'boost::wave::grammars::predefined_macros_grammar::definition<ScannerT>' being compiled
        with
        [
            ScannerT=boost::spirit::classic::scanner<lexer_type,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,pt_match_policy_t,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(274): note: see reference to function template instantiation 'void boost::spirit::classic::impl::call_helper<0>::do_<result_t,definition_t,ScannerT>(RT &,DefinitionT &,const ScannerT &)' being compiled
        with
        [
            ScannerT=boost::spirit::classic::scanner<lexer_type,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,pt_match_policy_t,boost::spirit::classic::action_policy>>,
            RT=result_t,
            DefinitionT=definition_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(57): note: see reference to function template instantiation 'boost::spirit::classic::tree_match<IteratorT,NodeFactoryT,T> boost::spirit::classic::impl::grammar_parser_parse<0,boost::wave::grammars::predefined_macros_grammar,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>,ScannerT>(const boost::spirit::classic::grammar<boost::wave::grammars::predefined_macros_grammar,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>> *,const ScannerT &)' being compiled
        with
        [
            IteratorT=boost::wave::cpplexer::lex_iterator<token_type>,
            NodeFactoryT=boost::spirit::classic::node_val_data_factory<boost::spirit::classic::nil_t>,
            T=boost::spirit::classic::nil_t,
            ScannerT=boost::spirit::classic::scanner<lexer_type,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,pt_match_policy_t,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(65): note: see reference to function template instantiation 'boost::spirit::classic::tree_match<IteratorT,NodeFactoryT,T> boost::spirit::classic::grammar<boost::wave::grammars::predefined_macros_grammar,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>>::parse_main<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            IteratorT=boost::wave::cpplexer::lex_iterator<token_type>,
            NodeFactoryT=boost::spirit::classic::node_val_data_factory<boost::spirit::classic::nil_t>,
            T=boost::spirit::classic::nil_t,:intlit_grammar,boost::spirit::classic::closure_context<DerivedT>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            T=unsigned long,
            DerivedT=boost::wave::grammars::closures::intlit_closure,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/impl/parser.ipp(30): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::action<DerivedT,boost::spirit::classic::ref_value_actor<T,boost::spirit::classic::assign_action>>::parse<boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>>(const ScannerT &) const' being compiled
        with
        [
            T=unsigned long,
            DerivedT=boost::wave::grammars::intlit_grammar,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/impl/parser.ipp(30): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::action<DerivedT,boost::spirit::classic::ref_value_actor<T,boost::spirit::classic::assign_action>>::parse<boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>>(const ScannerT &) const' being compiled
        with
        [
            T=unsigned long,
            DerivedT=boost::wave::grammars::intlit_grammar,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_intlit_grammar.hpp(167): note: see reference to function template instantiation 'boost::spirit::classic::parse_info<const char *> boost::spirit::classic::parse<const char*,boost::spirit::classic::action<DerivedT,boost::spirit::classic::ref_value_actor<boost::wave::uint_literal_type,boost::spirit::classic::assign_action>>>(const IteratorT &,const IteratorT &,const boost::spirit::classic::parser<boost::spirit::classic::action<DerivedT,boost::spirit::classic::ref_value_actor<boost::wave::uint_literal_type,boost::spirit::classic::assign_action>>> &)' being compiled
        with
        [
            DerivedT=boost::wave::grammars::intlit_grammar,
            IteratorT=const char *
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_intlit_grammar.hpp(160): note: while compiling class template member function 'boost::wave::uint_literal_type boost::wave::grammars::intlit_grammar_gen<token_type>::evaluate(const TokenT &,bool &)'
        with
        [
            TokenT=token_type
        ]
C:\tools\boost\1.61.0_draeger02\libs\wave\src\instantiate_cpp_literalgrs.cpp(43): note: see reference to class template instantiation 'boost::wave::grammars::intlit_grammar_gen<token_type>' being compiled
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/statements.hpp(41): warning C4459: declaration of '_1' hides global declaration
C:\tools\boost\1.61.0_draeger02\boost/bind/placeholders.hpp(46): note: see declaration of 'boost::placeholders::_1'
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/statements.hpp(41): note: while compiling class template member function 'phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>::sequential_composite(const A0 &,const A1 &)'
        with
        [
            OperationT=phoenix::assign_op,
            T0=boost::wave::uint_literal_type,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            A0=phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<boost::wave::uint_literal_type,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,
            A1=phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/statements.hpp(60): note: see reference to function template instantiation 'phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>::sequential_composite(const A0 &,const A1 &)' being compiled
        with
        [
            OperationT=phoenix::assign_op,
            T0=boost::wave::uint_literal_type,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            A0=phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<boost::wave::uint_literal_type,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,
            A1=phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/actor.hpp(133): note: see reference to class template instantiation 'phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>' being compiled
        with
        [
            OperationT=phoenix::assign_op,
            T0=boost::wave::uint_literal_type,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_intlit_grammar.hpp(106): note: see reference to class template instantiation 'phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>' being compiled
        with
        [
            OperationT=phoenix::assign_op,
            T0=boost::wave::uint_literal_type,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_intlit_grammar.hpp(83): note: while compiling class template member function 'boost::wave::grammars::intlit_grammar::definition<ScannerT>::definition(const boost::wave::grammars::intlit_grammar &)'
        with
        [
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(160): note: see reference to function template instantiation 'boost::wave::grammars::intlit_grammar::definition<ScannerT>::definition(const boost::wave::grammars::intlit_grammar &)' being compiled
        with
        [
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(255): note: see reference to class template instantiation 'boost::wave::grammars::intlit_grammar::definition<ScannerT>' being compiled
        with
        [
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(274): note: see reference to function template instantiation 'void boost::spirit::classic::impl::call_helper<0>::do_<result_t,definition_t,ScannerT>(RT &,DefinitionT &,const ScannerT &)' being compiled
        with
        [
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,
            RT=result_t,
            DefinitionT=definition_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(57): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::impl::grammar_parser_parse<0,boost::wave::grammars::intlit_grammar,boost::spirit::classic::closure_context<DerivedT>,ScannerT>(const boost::spirit::classic::grammar<boost::wave::grammars::intlit_grammar,boost::spirit::classic::closure_context<DerivedT>> *,const ScannerT &)' being compiled
        with
        [
            T=unsigned long,
            DerivedT=boost::wave::grammars::closures::intlit_closure,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(65): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::grammar<boost::wave::grammars::intlit_grammar,boost::spirit::classic::closure_context<DerivedT>>::parse_main<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            T=unsigned long,
            DerivedT=boost::wave::grammars::closures::intlit_closure,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(65): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::grammar<boost::wave::grammars::intlit_grammar,boost::spirit::classic::closure_context<DerivedT>>::parse_main<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            T=unsigned long,
            DerivedT=boost::wave::grammars::closures::intlit_closure,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/composite.hpp(1377): warning C4459: declaration of '_1' hides global declaration
C:\tools\boost\1.61.0_draeger02\boost/bind/placeholders.hpp(46): note: see declaration of 'boost::placeholders::_1'
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/composite.hpp(1378): note: while compiling class template member function 'phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>> phoenix::impl::make_binary1<OperationT,BaseT,phoenix::actor<phoenix::argument<0>>>::construct(const phoenix::actor<BaseT> &,const B &)'
        with
        [
            OperationT=phoenix::assign_op,
            T0=boost::wave::uint_literal_type,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            BaseT=phoenix::closure_member<0,phoenix::closure<boost::wave::uint_literal_type,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>,
            B=phoenix::actor<phoenix::argument<0>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/operators.hpp(1032): note: see reference to function template instantiation 'phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>> phoenix::impl::make_binary1<OperationT,BaseT,phoenix::actor<phoenix::argument<0>>>::construct(const phoenix::actor<BaseT> &,const B &)' being compiled
        with
        [
            OperationT=phoenix::assign_op,
            T0=boost::wave::uint_literal_type,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            BaseT=phoenix::closure_member<0,phoenix::closure<boost::wave::uint_literal_type,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>,
            B=phoenix::actor<phoenix::argument<0>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_intlit_grammar.hpp(104): note: see reference to class template instantiation 'phoenix::impl::make_binary1<phoenix::assign_op,BaseT,phoenix::actor<phoenix::argument<0>>>' being compiled
        with
        [
            BaseT=phoenix::closure_member<0,phoenix::closure<boost::wave::uint_literal_type,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/closures.hpp(274): warning C4709: comma operator within array index expression
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/composite.hpp(283): note: see reference to function template instantiation 'unsigned int &phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>::eval<TupleT>(const TupleT &) const' being compiled
        with
        [
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            TupleT=phoenix::tuple<const iterator_t &,const iterator_t &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/composite.hpp(283): note: see reference to function template instantiation 'unsigned int &phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>::eval<TupleT>(const TupleT &) const' being compiled
        with
        [
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            TupleT=phoenix::tuple<const iterator_t &,const iterator_t &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/statements.hpp(48): note: see reference to function template instantiation 'unsigned int &phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>::eval<TupleT>(const TupleT &) const' being compiled
        with
        [
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            TupleT=phoenix::tuple<const iterator_t &,const iterator_t &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/statements.hpp(48): note: see reference to function template instantiation 'unsigned int &phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>::eval<TupleT>(const TupleT &) const' being compiled
        with
        [
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            TupleT=phoenix::tuple<const iterator_t &,const iterator_t &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/actor.hpp(363): note: see reference to function template instantiation 'void phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>::eval<phoenix::tuple<const IteratorT &,const IteratorT &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>(const TupleT &) const' being compiled
        with
        [
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            IteratorT=iterator_t,
            TupleT=phoenix::tuple<const iterator_t &,const iterator_t &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/actor.hpp(363): note: see reference to function template instantiation 'void phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>::eval<phoenix::tuple<const IteratorT &,const IteratorT &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>(const TupleT &) const' being compiled
        with
        [
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            IteratorT=iterator_t,
            TupleT=phoenix::tuple<const iterator_t &,const iterator_t &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/scanner.hpp(148): note: see reference to function template instantiation 'void phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>::operator ()<const IteratorT,const IteratorT>(A &,B &) const' being compiled
        with
        [
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            IteratorT=iterator_t,
            A=iterator_t,
            B=iterator_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/scanner.hpp(148): note: see reference to function template instantiation 'void phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>::operator ()<const IteratorT,const IteratorT>(A &,B &) const' being compiled
        with
        [
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            IteratorT=iterator_t,
            A=iterator_t,
            B=iterator_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/scanner.hpp(163): note: see reference to function template instantiation 'void boost::spirit::classic::attributed_action_policy<boost::spirit::classic::nil_t>::call<ActorT,IteratorT>(const ActorT &,boost::spirit::classic::nil_t,const IteratorT &,const IteratorT &)' being compiled
        with
        [
            ActorT=phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,
            IteratorT=iterator_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/actions.hpp(116): note: see reference to function template instantiation 'void boost::spirit::classic::action_policy::do_action<ActionT,boost::spirit::classic::match<boost::spirit::classic::nil_t>::return_t,iterator_t>(const ActorT &,AttrT &,const IteratorT &,const IteratorT &) const' being compiled
        with
        [
            ActionT=phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,
            ActorT=phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,
            AttrT=boost::spirit::classic::match<boost::spirit::classic::nil_t>::return_t,
            IteratorT=iterator_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(60): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::action<DerivedT,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::epsilon_parser,
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(60): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::action<DerivedT,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::epsilon_parser,
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(60): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::action<DerivedT,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::optional<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::epsilon_parser,
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(60): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::action<DerivedT,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::optional<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::epsilon_parser,
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(60): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::action<DerivedT,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::optional<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::chlit<char>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::epsilon_parser,
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(60): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::action<DerivedT,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::optional<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::chlit<char>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::epsilon_parser,
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(60): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::action<DerivedT,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::optional<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::chlit<char>>,boost::spirit::classic::positive<boost::spirit::classic::alternative<boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::impl::if_else_parser<ParsableTrueT,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,2>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,CondT>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,4,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,8,8>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,8,1,3>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::negated_empty_match_parser<SubjectT>,boost::spirit::classic::action<boost::spirit::classic::anychar_parser,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::epsilon_parser,
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ParsableTrueT=boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,
            CondT=phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,
            SubjectT=boost::spirit::classic::chlit<char>,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/sequence.hpp(60): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::action<DerivedT,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::optional<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::chlit<char>>,boost::spirit::classic::positive<boost::spirit::classic::alternative<boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::impl::if_else_parser<ParsableTrueT,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,2>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,CondT>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,4,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,8,8>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,8,1,3>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::negated_empty_match_parser<SubjectT>,boost::spirit::classic::action<boost::spirit::classic::anychar_parser,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::epsilon_parser,
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ParsableTrueT=boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,
            CondT=phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,
            SubjectT=boost::spirit::classic::chlit<char>,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/rule.ipp(241): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::action<DerivedT,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::optional<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::chlit<char>>,boost::spirit::classic::positive<boost::spirit::classic::alternative<boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::impl::if_else_parser<ParsableTrueT,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,2>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,CondT>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,4,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,8,8>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,8,1,3>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::negated_empty_match_parser<SubjectT>,boost::spirit::classic::action<boost::spirit::classic::anychar_parser,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>>>,boost::spirit::classic::chlit<char>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::epsilon_parser,
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ParsableTrueT=boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,
            CondT=phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,
            SubjectT=boost::spirit::classic::chlit<char>,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/rule.ipp(241): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::action<DerivedT,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::optional<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::chlit<char>>,boost::spirit::classic::positive<boost::spirit::classic::alternative<boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::impl::if_else_parser<ParsableTrueT,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,2>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,CondT>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,4,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,8,8>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,8,1,3>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::negated_empty_match_parser<SubjectT>,boost::spirit::classic::action<boost::spirit::classic::anychar_parser,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>>>,boost::spirit::classic::chlit<char>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            DerivedT=boost::spirit::classic::epsilon_parser,
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ParsableTrueT=boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,
            CondT=phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,
            SubjectT=boost::spirit::classic::chlit<char>,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/rule.ipp(240): note: while compiling class template member function 'boost::spirit::classic::match<T> boost::spirit::classic::impl::concrete_parser<ParserT,boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,unsigned int>::do_parse_virtual(const ScannerT &) const'
        with
        [
            T=unsigned int,
            ParserT=boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::action<boost::spirit::classic::epsilon_parser,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::optional<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::chlit<char>>,boost::spirit::classic::positive<boost::spirit::classic::alternative<boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::impl::if_else_parser<boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,2>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,4,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,8,8>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,8,1,3>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::negated_empty_match_parser<boost::spirit::classic::chlit<char>>,boost::spirit::classic::action<boost::spirit::classic::anychar_parser,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>>>,boost::spirit::classic::chlit<char>>,
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/rule.hpp(137): note: see reference to class template instantiation 'boost::spirit::classic::impl::concrete_parser<ParserT,boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,unsigned int>' being compiled
        with
        [
            ParserT=boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::action<boost::spirit::classic::epsilon_parser,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::optional<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::chlit<char>>,boost::spirit::classic::positive<boost::spirit::classic::alternative<boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::impl::if_else_parser<boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,2>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,4,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,8,8>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,8,1,3>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::negated_empty_match_parser<boost::spirit::classic::chlit<char>>,boost::spirit::classic::action<boost::spirit::classic::anychar_parser,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>>>,boost::spirit::classic::chlit<char>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_chlit_grammar.hpp(272): note: see reference to function template instantiation 'boost::spirit::classic::rule<ScannerT,boost::spirit::classic::closure_context<DerivedT>,boost::spirit::classic::nil_t> &boost::spirit::classic::rule<ScannerT,boost::spirit::classic::closure_context<DerivedT>,boost::spirit::classic::nil_t>::operator =<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::action<boost::spirit::classic::epsilon_parser,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::optional<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::chlit<char>>,boost::spirit::classic::positive<boost::spirit::classic::alternative<boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::impl::if_else_parser<ParsableTrueT,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,2>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,CondT>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,4,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,8,8>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,8,1,3>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::negated_empty_match_parser<SubjectT>,boost::spirit::classic::action<boost::spirit::classic::anychar_parser,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>>>,boost::spirit::classic::chlit<char>>>(const ParserT &)' being compiled
        with
        [
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,
            DerivedT=boost::wave::grammars::closures::chlit_closure,
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ParsableTrueT=boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,
            CondT=phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,
            SubjectT=boost::spirit::classic::chlit<char>,
            ParserT=boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::action<boost::spirit::classic::epsilon_parser,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::optional<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::chlit<char>>,boost::spirit::classic::positive<boost::spirit::classic::alternative<boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::impl::if_else_parser<boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,2>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,4,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,8,8>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,8,1,3>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::negated_empty_match_parser<boost::spirit::classic::chlit<char>>,boost::spirit::classic::action<boost::spirit::classic::anychar_parser,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>>>,boost::spirit::classic::chlit<char>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_chlit_grammar.hpp(169): note: see reference to function template instantiation 'boost::spirit::classic::rule<ScannerT,boost::spirit::classic::closure_context<DerivedT>,boost::spirit::classic::nil_t> &boost::spirit::classic::rule<ScannerT,boost::spirit::classic::closure_context<DerivedT>,boost::spirit::classic::nil_t>::operator =<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::action<boost::spirit::classic::epsilon_parser,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::optional<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::chlit<char>>,boost::spirit::classic::positive<boost::spirit::classic::alternative<boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::impl::if_else_parser<ParsableTrueT,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,2>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,CondT>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,4,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,8,8>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<ile_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>,ScannerT>(const boost::spirit::classic::grammar<boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>> *,const ScannerT &)' being compiled
        with
        [
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(65): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::grammar<boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>>::parse_main<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(65): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::grammar<boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>>::parse_main<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(109): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::grammar<boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>>::parse<scanner_t>(const ScannerT &) const' being compiled
        with
        [
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(109): note: see reference to function template instantiation 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::grammar<boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>>::parse<scanner_t>(const ScannerT &) const' being compiled
        with
        [
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(155): note: see reference to function template instantiation 'boost::spirit::classic::parse_info<boost::wave::util::unput_queue_iterator<std::_List_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>>,boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>> boost::spirit::classic::impl::phrase_parser<SkipT>::parse<IteratorT,DerivedT>(const IteratorT &,const IteratorT &,const ParserT &,const SkipT &)' being compiled
        with
        [
            SkipT=boost::spirit::classic::alternative<boost::spirit::classic::chlit<boost::wave::token_id>,boost::spirit::classic::chlit<boost::wave::token_id>>,
            IteratorT=boost::wave::util::unput_queue_iterator<std::_List_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>>,boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>,
            DerivedT=boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>,
            ParserT=boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/impl/skipper.ipp(154): note: see reference to function template instantiation 'boost::spirit::classic::parse_info<boost::wave::util::unput_queue_iterator<std::_List_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>>,boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>> boost::spirit::classic::impl::phrase_parser<SkipT>::parse<IteratorT,DerivedT>(const IteratorT &,const IteratorT &,const ParserT &,const SkipT &)' being compiled
        with
        [
            SkipT=boost::spirit::classic::alternative<boost::spirit::classic::chlit<boost::wave::token_id>,boost::spirit::classic::chlit<boost::wave::token_id>>,
            IteratorT=boost::wave::util::unput_queue_iterator<std::_List_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>>,boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>,
            DerivedT=boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>,
            ParserT=boost::wave::grammars::defined_grammar<std::list<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::fast_pool_allocator<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_defined_grammar.hpp(93): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_defined_grammar.hpp(97): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
gned/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(390): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(401): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(413): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(424): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(435): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(452): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(550): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(554): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(595): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(602): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(609): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(616): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(623): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(632): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(683): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(684): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/composite.hpp(1377): warning C4459: declaration of '_1' hides global declaration
C:\tools\boost\1.61.0_draeger02\boost/bind/placeholders.hpp(46): note: see declaration of 'boost::placeholders::_1'
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/composite.hpp(1378): note: while compiling class template member function 'phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::convert_chlit,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>> phoenix::impl::make_binary1<OperationT,BaseT,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::convert_chlit,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>::construct(const phoenix::actor<BaseT> &,const B &)'
        with
        [
            OperationT=phoenix::assign_op,
            T0=boost::wave::grammars::closures::closure_value,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            BaseT=phoenix::closure_member<0,phoenix::closure<boost::wave::grammars::closures::closure_value,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>,
            B=phoenix::actor<phoenix::composite<boost::wave::grammars::impl::convert_chlit,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/operators.hpp(1032): note: see reference to function template instantiation 'phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::convert_chlit,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>> phoenix::impl::make_binary1<OperationT,BaseT,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::convert_chlit,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>::construct(const phoenix::actor<BaseT> &,const B &)' being compiled
        with
        [
            OperationT=phoenix::assign_op,
            T0=boost::wave::grammars::closures::closure_value,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            BaseT=phoenix::closure_member<0,phoenix::closure<boost::wave::grammars::closures::closure_value,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>,
            B=phoenix::actor<phoenix::composite<boost::wave::grammars::impl::convert_chlit,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(579): note: see reference to class template instantiation 'phoenix::impl::make_binary1<phoenix::assign_op,BaseT,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>' being compiled
        with
        [
            BaseT=phoenix::closure_member<0,phoenix::closure<boost::wave::grammars::closures::closure_value,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>,
            OperationT=boost::wave::grammars::impl::convert_chlit
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(332): note: while compiling class template member function 'boost::wave::grammars::expression_grammar::definition<ScannerT>::definition(const boost::wave::grammars::expression_grammar &)'
        with
        [
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/grammar.ipp(160): note: see reference to function template instantiation 'boost::wave::grammars::expression_grammar::definition<ScannerT>::definition(const boost::wave::grammars::expression_grammar &)' being compiled
        with
        [
            ScannerT=scanner_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/closures.hpp(274): warning C4709: comma operator within array index expression
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/composite.hpp(283): note: see reference to function template instantiation 'boost::wave::grammars::closures::closure_value &phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>::eval<TupleT>(const TupleT &) const' being compiled
        with
        [
            T0=boost::wave::grammars::closures::closure_value,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            TupleT=phoenix::tuple<const boost::wave::grammars::closures::closure_value &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/composite.hpp(283): note: see reference to function template instantiation 'boost::wave::grammars::closures::closure_value &phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>::eval<TupleT>(const TupleT &) const' being compiled
        with
        [
            T0=boost::wave::grammars::closures::closure_value,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            TupleT=phoenix::tuple<const boost::wave::grammars::closures::closure_value &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/actor.hpp(354): note: see reference to function template instantiation 'boost::wave::grammars::closures::closure_value &phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>::eval<phoenix::tuple<AttrT &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>(const TupleT &) const' being compiled
        with
        [
            OperationT=phoenix::assign_op,
            T0=boost::wave::grammars::closures::closure_value,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            AttrT=boost::wave::grammars::closures::closure_value,
            TupleT=phoenix::tuple<const boost::wave::grammars::closures::closure_value &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/actor.hpp(354): note: see reference to function template instantiation 'boost::wave::grammars::closures::closure_value &phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>::eval<phoenix::tuple<AttrT &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>(const TupleT &) const' being compiled
        with
        [
            OperationT=phoenix::assign_op,
            T0=boost::wave::grammars::closures::closure_value,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            AttrT=boost::wave::grammars::closures::closure_value,
            TupleT=phoenix::tuple<const boost::wave::grammars::closures::closure_value &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/scanner.hpp(132): note: see reference to function template instantiation 'boost::wave::grammars::closures::closure_value &phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>::operator ()<AttrT>(A &) const' being compiled
        with
        [
            OperationT=phoenix::assign_op,
            T0=boost::wave::grammars::closures::closure_value,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            AttrT=boost::wave::grammars::closures::closure_value,
            A=boost::wave::grammars::closures::closure_value
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/scanner.hpp(132): note: see reference to function template instantiation 'boost::wave::grammars::closures::closure_value &phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>::operator ()<AttrT>(A &) const' being compiled
        with
        [
            OperationT=phoenix::assign_op,
            T0=boost::wave::grammars::closures::closure_value,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            AttrT=boost::wave::grammars::closures::closure_value,
            A=boost::wave::grammars::closures::closure_value
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/scanner.hpp(163): note: see reference to function template instantiation 'void boost::spirit::classic::attributed_action_policy<AttrT>::call<ActorT,IteratorT>(const ActorT &,AttrT &,const IteratorT &,const IteratorT &)' being compiled
        with
        [
            AttrT=boost::wave::grammars::closures::closure_value,
            ActorT=phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<boost::wave::grammars::closures::closure_value,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,
            IteratorT=iterator_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/scanner/scanner.hpp(163): note: see reference to function template instantiation 'void boost::spirit::classic::attributed_action_policy<AttrT>::call<ActorT,IteratorT>(const ActorT &,AttrT &,const IteratorT &,const IteratorT &)' being compiled
        with
        [
            AttrT=boost::wave::grammars::closures::closure_value,
            ActorT=phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<boost::wave::grammars::closures::closure_value,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,
            IteratorT=iterator_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/composite/actions.hpp(116): note: see reference to function template instantiation 'void boost::spirit::classic::action_policy::do_action<ActionT,const T,iterator_t>(const ActorT &,AttrT &,const IteratorT &,const IteratorT &) const' being compiled
        with
        [
            ActionT=phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<boost::wave::grammars::closures::closure_value,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,
            T=boost::wave::grammars::closures::closure_value,
            ActorT=phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<boost::wave::grammars::closures::closure_value,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,
            AttrT=boost::wave::grammars::closures::closure_value,
            IteratorT=iterator_t
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/rule.ipp(241): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::action<DerivedT,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            T=boost::wave::grammars::closures::closure_value,
            DerivedT=boost::spirit::classic::rule<scanner_t,boost::spirit::classic::closure_context<boost::wave::grammars::closures::cpp_expr_closure>,boost::spirit::classic::nil_t>,
            OperationT=phoenix::assign_op,
            T0=boost::wave::grammars::closures::closure_value,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ScannerT=boost::spirit::classic::scanner<std::_List_const_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>>,scanner_policies_t>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/rule.ipp(241): note: see reference to function template instantiation 'boost::spirit::classic::match<T> boost::spirit::classic::action<DerivedT,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoen***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/wave/src/token_ids.obj

            ScannerT=boost::spirit::classic::scanner<lexer_type,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,pt_match_policy_t,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(65): note: see reference to function template instantiation 'boost::spirit::classic::tree_match<IteratorT,NodeFactoryT,T> boost::spirit::classic::grammar<boost::wave::grammars::predefined_macros_grammar,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>>::parse_main<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            IteratorT=boost::wave::cpplexer::lex_iterator<token_type>,
            NodeFactoryT=boost::spirit::classic::node_val_data_factory<boost::spirit::classic::nil_t>,
            T=boost::spirit::classic::nil_t,
            ScannerT=boost::spirit::classic::scanner<lexer_type,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,pt_match_policy_t,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/tree/parse_tree.hpp(255): note: see reference to function template instantiation 'boost::spirit::classic::tree_match<IteratorT,NodeFactoryT,T> boost::spirit::classic::grammar<boost::wave::grammars::predefined_macros_grammar,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>>::parse<boost::spirit::classic::scanner<IteratorT,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,pt_match_policy_t,boost::spirit::classic::action_policy>>>(const ScannerT &) const' being compiled
        with
        [
            IteratorT=boost::wave::cpplexer::lex_iterator<token_type>,
            NodeFactoryT=boost::spirit::classic::node_val_data_factory<boost::spirit::classic::nil_t>,
            T=boost::spirit::classic::nil_t,
            ScannerT=boost::spirit::classic::scanner<lexer_type,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,pt_match_policy_t,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/tree/parse_tree.hpp(255): note: see reference to function template instantiation 'boost::spirit::classic::tree_match<IteratorT,NodeFactoryT,T> boost::spirit::classic::grammar<boost::wave::grammars::predefined_macros_grammar,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>>::parse<boost::spirit::classic::scanner<IteratorT,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,pt_match_policy_t,boost::spirit::classic::action_policy>>>(const ScannerT &) const' being compiled
        with
        [
            IteratorT=boost::wave::cpplexer::lex_iterator<token_type>,
            NodeFactoryT=boost::spirit::classic::node_val_data_factory<boost::spirit::classic::nil_t>,
            T=boost::spirit::classic::nil_t,
            ScannerT=boost::spirit::classic::scanner<lexer_type,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,pt_match_policy_t,boost::spirit::classic::action_policy>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_predef_macros_grammar.hpp(163): note: see reference to function template instantiation 'boost::spirit::classic::tree_parse_info<boost::wave::cpplexer::lex_iterator<token_type>,boost::spirit::classic::node_val_data_factory<boost::spirit::classic::nil_t>,boost::spirit::classic::nil_t> boost::spirit::classic::pt_parse<LexIteratorT,DerivedT>(const IteratorT &,const IteratorT &,const boost::spirit::classic::parser<DerivedT> &)' being compiled
        with
        [
            LexIteratorT=lexer_type,
            DerivedT=boost::wave::grammars::predefined_macros_grammar,
            IteratorT=lexer_type
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_predef_macros_grammar.hpp(161): note: while compiling class template member function 'boost::spirit::classic::tree_parse_info<boost::wave::cpplexer::lex_iterator<token_type>,boost::spirit::classic::node_val_data_factory<boost::spirit::classic::nil_t>,boost::spirit::classic::nil_t> boost::wave::grammars::predefined_macros_grammar_gen<lexer_type>::parse_predefined_macro(const boost::wave::cpplexer::lex_iterator<token_type> &,const boost::wave::cpplexer::lex_iterator<token_type> &)'
C:\tools\boost\1.61.0_draeger02\libs\wave\src\instantiate_predef_macros.cpp(44): note: see reference to class template instantiation 'boost::wave::grammars::predefined_macros_grammar_gen<lexer_type>' being compiled
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_predef_macros_grammar.hpp(82): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_predef_macros_grammar.hpp(84): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_predef_macros_grammar.hpp(97): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_predef_macros_grammar.hpp(99): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_predef_macros_grammar.hpp(101): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
instantiate_re2c_lexer.cpp
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1805): warning C4458: declaration of 'pointer' hides class member
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1469): note: see declaration of 'boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>::pointer'
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1660): note: see reference to function template instantiation 'bool boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>::IsAliasedRange<const char*>(Iterator,Iterator)' being compiled
        with
        [
            Iterator=const char *
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1660): note: see reference to function template instantiation 'bool boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>::IsAliasedRange<const char*>(Iterator,Iterator)' being compiled
        with
        [
            Iterator=const char *
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1656): note: while compiling class template member function 'boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>> &boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>::append(const char *,const unsigned int)'
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1725): note: see reference to function template instantiation 'boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>> &boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>::append(const char *,const unsigned int)' being compiled
C:\tools\boost\1.61.0_draeger02\boost/wave/util/file_position.hpp(85): note: see reference to class template instantiation 'boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>' being compiled
C:\tools\boost\1.61.0_draeger02\boost/wave/util/file_position.hpp(161): note: see reference to class template instantiation 'boost::wave::util::file_position<boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>>' being compiled
c:\tools\boost\1.61.0_draeger02\boost\wave\cpplexer\re2clex\cpp_re2c_lexer.hpp(327) : warning C4702: unreachable code
c:\tools\boost\1.61.0_draeger02\boost\wave\cpplexer\re2clex\cpp_re2c_lexer.hpp(327) : warning C4702: unreachable code
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/wave/src/wave_config_constant.obj
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/wave/src/cpplexer/re2clex/aq.obj
phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,8,1,3>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::negated_empty_match_parser<SubjectT>,boost::spirit::classic::action<boost::spirit::classic::anychar_parser,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>>>,boost::spirit::classic::chlit<char>>>(const ParserT &)' being compiled
        with
        [
            ScannerT=boost::spirit::classic::scanner<const char *,boost::spirit::classic::scanner_policies<boost::spirit::classic::iteration_policy,boost::spirit::classic::match_policy,boost::spirit::classic::action_policy>>,
            DerivedT=boost::wave::grammars::closures::chlit_closure,
            OperationT=phoenix::assign_op,
            T0=uint32_t,
            T1=bool,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ParsableTrueT=boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,
            CondT=phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,
            SubjectT=boost::spirit::classic::chlit<char>,
            ParserT=boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::sequence<boost::spirit::classic::action<boost::spirit::classic::epsilon_parser,phoenix::actor<phoenix::sequential_composite<phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>,phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::optional<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::value<bool>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::chlit<char>>,boost::spirit::classic::positive<boost::spirit::classic::alternative<boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::alternative<boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<int>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::action<boost::spirit::classic::chlit<char>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::value<char>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::impl::if_else_parser<boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,1,2>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,4,4>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::chlit<char>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,16,8,8>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::action<boost::spirit::classic::uint_parser<unsigned int,8,1,3>,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>,boost::spirit::classic::sequence<boost::spirit::classic::negated_empty_match_parser<boost::spirit::classic::chlit<char>>,boost::spirit::classic::action<boost::spirit::classic::anychar_parser,phoenix::actor<phoenix::composite<boost::wave::grammars::impl::compose_character_literal,phoenix::actor<phoenix::closure_member<0,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::closure_member<1,phoenix::closure<uint32_t,bool,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::variable<bool>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>>>>,boost::spirit::classic::chlit<char>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/primitives.hpp(59): warning C4709: comma operator within array index expression
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/composite.hpp(412): note: see reference to function template instantiation 'const char &phoenix::argument<0>::eval<TupleT>(const TupleT &) const' being compiled
        with
        [
            TupleT=phoenix::tuple<const char &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/composite.hpp(412): note: see reference to function template instantiation 'const char &phoenix::argument<0>::eval<TupleT>(const TupleT &) const' being compiled
        with
        [
            TupleT=phoenix::tuple<const char &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>
        ]
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/boost/libs/wave/src/cpplexer/re2clex/cpp_re.obj
           ScannerT=scanner_type
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/grammar.hpp(65): note: see reference to function template instantiation 'boost::spirit::classic::tree_match<IteratorT,NodeFactoryT,T> boost::spirit::classic::grammar<boost::wave::grammars::cpp_grammar<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,TokenContainerT>,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>>::parse_main<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            IteratorT=boost::wave::cpplexer::lex_iterator<token_type>,
            NodeFactoryT=boost::wave::grammars::cpp_grammar_gen<lexer_type,token_sequence_type>::node_factory_type,
            T=boost::spirit::classic::nil_t,
            TokenContainerT=token_sequence_type,
            ScannerT=scanner_type
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(706): note: see reference to function template instantiation 'boost::spirit::classic::tree_match<IteratorT,NodeFactoryT,T> boost::spirit::classic::grammar<boost::wave::grammars::cpp_grammar<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,TokenContainerT>,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>>::parse<scanner_type>(const ScannerT &) const' being compiled
        with
        [
            IteratorT=boost::wave::cpplexer::lex_iterator<token_type>,
            NodeFactoryT=boost::wave::grammars::cpp_grammar_gen<lexer_type,token_sequence_type>::node_factory_type,
            T=boost::spirit::classic::nil_t,
            TokenContainerT=token_sequence_type,
            ScannerT=scanner_type
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(706): note: see reference to function template instantiation 'boost::spirit::classic::tree_match<IteratorT,NodeFactoryT,T> boost::spirit::classic::grammar<boost::wave::grammars::cpp_grammar<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,TokenContainerT>,boost::spirit::classic::parser_context<boost::spirit::classic::nil_t>>::parse<scanner_type>(const ScannerT &) const' being compiled
        with
        [
            IteratorT=boost::wave::cpplexer::lex_iterator<token_type>,
            NodeFactoryT=boost::wave::grammars::cpp_grammar_gen<lexer_type,token_sequence_type>::node_factory_type,
            T=boost::spirit::classic::nil_t,
            TokenContainerT=token_sequence_type,
            ScannerT=scanner_type
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(740): note: see reference to function template instantiation 'boost::spirit::classic::tree_parse_info<boost::wave::cpplexer::lex_iterator<token_type>,boost::wave::grammars::cpp_grammar_gen<lexer_type,token_sequence_type>::node_factory_type,boost::spirit::classic::nil_t> boost::wave::grammars::parsetree_parse<boost::wave::grammars::cpp_grammar_gen<lexer_type,token_sequence_type>::node_factory_type,LexIteratorT,DerivedT>(const IteratorT &,const IteratorT &,const boost::spirit::classic::parser<DerivedT> &)' being compiled
        with
        [
            LexIteratorT=lexer_type,
            DerivedT=boost::wave::grammars::cpp_grammar<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>,token_sequence_type>,
            IteratorT=lexer_type
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(734): note: while compiling class template member function 'boost::spirit::classic::tree_parse_info<boost::wave::cpplexer::lex_iterator<token_type>,boost::wave::grammars::cpp_grammar_gen<lexer_type,token_sequence_type>::node_factory_type,boost::spirit::classic::nil_t> boost::wave::grammars::cpp_grammar_gen<lexer_type,token_sequence_type>::parse_cpp_grammar(const boost::wave::cpplexer::lex_iterator<token_type> &,const boost::wave::cpplexer::lex_iterator<token_type> &,const boost::wave::util::file_position<boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>> &,bool &,boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type> &,std::list<token_type,boost::fast_pool_allocator<token_type,boost::default_user_allocator_new_delete,boost::details::pool::default_mutex,32,0>> &)'
C:\tools\boost\1.61.0_draeger02\libs\wave\src\instantiate_cpp_grammar.cpp(48): note: see reference to class template instantiation 'boost::wave::grammars::cpp_grammar_gen<lexer_type,token_sequence_type>' being compiled
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(337): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(339): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(359): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(361): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(363): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(392): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(394): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(396): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(500): warning C4245: 'argument': conversion from 'boost::wave::token_category' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(556): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(558): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_grammar.hpp(560): warning C4245: 'argument': conversion from 'int' to 'unsigned long', signed/unsigned mismatch
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_atomic.lib
***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_atomic.lib" done
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_chrono.lib
ix::nil_t>>>::parse<ScannerT>(const ScannerT &) const' being compiled
        with
        [
            T=boost::wave::grammars::closures::closure_value,
            DerivedT=boost::spirit::classic::rule<scanner_t,boost::spirit::classic::closure_context<boost::wave::grammars::closures::cpp_expr_closure>,boost::spirit::classic::nil_t>,
            OperationT=phoenix::assign_op,
            T0=boost::wave::grammars::closures::closure_value,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ScannerT=boost::spirit::classic::scanner<std::_List_const_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>>,scanner_policies_t>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/impl/rule.ipp(240): note: while compiling class template member function 'boost::spirit::classic::match<boost::spirit::classic::nil_t> boost::spirit::classic::impl::concrete_parser<ParserT,boost::spirit::classic::scanner<IteratorT,scanner_policies_t>,boost::spirit::classic::nil_t>::do_parse_virtual(const ScannerT &) const'
        with
        [
            ParserT=boost::spirit::classic::action<boost::spirit::classic::rule<scanner_t,boost::spirit::classic::closure_context<boost::wave::grammars::closures::cpp_expr_closure>,boost::spirit::classic::nil_t>,phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<boost::wave::grammars::closures::closure_value,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,
            IteratorT=std::_List_const_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>>,
            ScannerT=boost::spirit::classic::scanner<std::_List_const_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>>,scanner_policies_t>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/core/non_terminal/rule.hpp(137): note: see reference to class template instantiation 'boost::spirit::classic::impl::concrete_parser<ParserT,boost::spirit::classic::scanner<IteratorT,scanner_policies_t>,boost::spirit::classic::nil_t>' being compiled
        with
        [
            ParserT=boost::spirit::classic::action<boost::spirit::classic::rule<scanner_t,boost::spirit::classic::closure_context<boost::wave::grammars::closures::cpp_expr_closure>,boost::spirit::classic::nil_t>,phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<boost::wave::grammars::closures::closure_value,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>,
            IteratorT=std::_List_const_iterator<std::_List_val<std::_List_simple_types<boost::wave::cpplexer::lex_token<boost::wave::util::file_position_type>>>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(341): note: see reference to function template instantiation 'boost::spirit::classic::rule<ScannerT,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t> &boost::spirit::classic::rule<ScannerT,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>::operator =<boost::spirit::classic::action<DerivedT,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>(const ParserT &)' being compiled
        with
        [
            ScannerT=scanner_t,
            DerivedT=boost::spirit::classic::rule<scanner_t,boost::spirit::classic::closure_context<boost::wave::grammars::closures::cpp_expr_closure>,boost::spirit::classic::nil_t>,
            OperationT=phoenix::assign_op,
            T0=boost::wave::grammars::closures::closure_value,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ParserT=boost::spirit::classic::action<boost::spirit::classic::rule<scanner_t,boost::spirit::classic::closure_context<boost::wave::grammars::closures::cpp_expr_closure>,boost::spirit::classic::nil_t>,phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<boost::wave::grammars::closures::closure_value,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/grammars/cpp_expression_grammar.hpp(340): note: see reference to function template instantiation 'boost::spirit::classic::rule<ScannerT,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t> &boost::spirit::classic::rule<ScannerT,boost::spirit::classic::nil_t,boost::spirit::classic::nil_t>::operator =<boost::spirit::classic::action<DerivedT,phoenix::actor<phoenix::composite<OperationT,phoenix::actor<phoenix::closure_member<0,phoenix::closure<T0,T1,T2,T3,T4,T5>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>>(const ParserT &)' being compiled
        with
        [
            ScannerT=scanner_t,
            DerivedT=boost::spirit::classic::rule<scanner_t,boost::spirit::classic::closure_context<boost::wave::grammars::closures::cpp_expr_closure>,boost::spirit::classic::nil_t>,
            OperationT=phoenix::assign_op,
            T0=boost::wave::grammars::closures::closure_value,
            T1=phoenix::nil_t,
            T2=phoenix::nil_t,
            T3=phoenix::nil_t,
            T4=phoenix::nil_t,
            T5=phoenix::nil_t,
            ParserT=boost::spirit::classic::action<boost::spirit::classic::rule<scanner_t,boost::spirit::classic::closure_context<boost::wave::grammars::closures::cpp_expr_closure>,boost::spirit::classic::nil_t>,phoenix::actor<phoenix::composite<phoenix::assign_op,phoenix::actor<phoenix::closure_member<0,phoenix::closure<boost::wave::grammars::closures::closure_value,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>>>,phoenix::actor<phoenix::argument<0>>,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::as_actor<phoenix::nil_t>::type,phoenix::nil_t>>>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/primitives.hpp(59): warning C4709: comma operator within array index expression
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/composite.hpp(284): note: see reference to function template instantiation 'const boost::wave::grammars::closures::closure_value &phoenix::argument<0>::eval<TupleT>(const TupleT &) const' being compiled
        with
        [
            TupleT=phoenix::tuple<const boost::wave::grammars::closures::closure_value &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>
        ]
C:\tools\boost\1.61.0_draeger02\boost/spirit/home/classic/phoenix/composite.hpp(284): note: see reference to function template instantiation 'const boost::wave::gramma***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_chrono.lib" done
rs::closures::closure_value &phoenix::argument<0>::eval<TupleT>(const TupleT &) const' being compiled
        with
        [
            TupleT=phoenix::tuple<const boost::wave::grammars::closures::closure_value &,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t,phoenix::nil_t>
        ]
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_date_time.lib
token_ids.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_exception.lib
wave_config_constant.cpp
***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_date_time.lib" done
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_filesystem.lib
***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_exception.lib" done
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_graph.lib
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_math.lib
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_program_options.lib
***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_filesystem.lib" done
aq.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_random.lib
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_regex.lib
***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_graph.lib" done
***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_random.lib" done
***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_program_options.lib" done
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_serialization.lib
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_signals.lib
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_system.lib
***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_signals.lib" done
***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_regex.lib" done
***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_system.lib" done
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_unit_test_framework.lib
***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_serialization.lib" done
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_thread.lib
instantiate_re2c_lexer_str.cpp
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1805): warning C4458: declaration of 'pointer' hides class member
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1469): note: see declaration of 'boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>::pointer'
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1660): note: see reference to function template instantiation 'bool boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>::IsAliasedRange<const char*>(Iterator,Iterator)' being compiled
        with
        [
            Iterator=const char *
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1660): note: see reference to function template instantiation 'bool boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>::IsAliasedRange<const char*>(Iterator,Iterator)' being compiled
        with
        [
            Iterator=const char *
        ]
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1656): note: while compiling class template member function 'boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>> &boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>::append(const char *,const unsigned int)'
C:\tools\boost\1.61.0_draeger02\boost/wave/util/flex_string.hpp(1725): note: see reference to function template instantiation 'boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>> &boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>::append(const char *,const unsigned int)' being compiled
C:\tools\boost\1.61.0_draeger02\boost/wave/util/file_position.hpp(85): note: see reference to class template instantiation 'boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>' being compiled
C:\tools\boost\1.61.0_draeger02\boost/wave/util/file_position.hpp(161): note: see reference to class template instantiation 'boost::wave::util::file_position<boost::wave::util::flex_string<char,std::char_traits<char>,std::allocator<char>,boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char,std::allocator<char>>,char *>>>' being compiled
c:\tools\boost\1.61.0_draeger02\boost\wave\cpplexer\re2clex\cpp_re2c_lexer.hpp(327) : warning C4702: unreachable code
c:\tools\boost\1.61.0_draeger02\boost\wave\cpplexer\re2clex\cpp_re2c_lexer.hpp(327) : warning C4702: unreachable code
***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_thread.lib" done
***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_unit_test_framework.lib" done
***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_math.lib" done
cpp_re.cpp
***Building***: d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_wave.lib
***Linking*** "d:/develop/git_projects/s32/binaries_1/Win32-SimRTP/lib/boost_wave.lib" done
=== date and time   28 September 2016/16:48 ===
Total time for this build 0:01:56 (116 seconds) return code: 0
